# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest


from openapi_client.models.azure_product_submission import (
    AzureProductSubmission,
)  # noqa: E501


class TestAzureProductSubmission(unittest.TestCase):
    """AzureProductSubmission unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureProductSubmission:
        """Test AzureProductSubmission
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `AzureProductSubmission`
        """
        model = AzureProductSubmission()  # noqa: E501
        if include_optional:
            return AzureProductSubmission(
                are_resources_ready = True,
                friendly_name = '',
                id = '',
                pending_update_info = openapi_client.models.azure_pending_update_info.AzurePendingUpdateInfo(
                    status = '', 
                    update_type = '', ),
                published_time_in_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                release_number = 56,
                resource_type = 'Submission',
                resources = [
                    openapi_client.models.azure_type_value.AzureTypeValue(
                        type = '', 
                        value = '', )
                    ],
                state = 'Inprogress',
                sub_state = 'InDraft',
                targets = [
                    openapi_client.models.azure_type_value.AzureTypeValue(
                        type = '', 
                        value = '', )
                    ],
                variant_resources = [
                    openapi_client.models.azure_variant_resource.AzureVariantResource(
                        resources = [
                            openapi_client.models.azure_type_value.AzureTypeValue(
                                type = '', 
                                value = '', )
                            ], 
                        variant_id = '', )
                    ]
            )
        else:
            return AzureProductSubmission(
        )
        """

    def testAzureProductSubmission(self):
        """Test AzureProductSubmission"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
