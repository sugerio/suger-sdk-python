# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.aws_marketplace_cppo_opportunity_rule import AwsMarketplaceCppoOpportunityRule

class TestAwsMarketplaceCppoOpportunityRule(unittest.TestCase):
    """AwsMarketplaceCppoOpportunityRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AwsMarketplaceCppoOpportunityRule:
        """Test AwsMarketplaceCppoOpportunityRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AwsMarketplaceCppoOpportunityRule`
        """
        model = AwsMarketplaceCppoOpportunityRule()
        if include_optional:
            return AwsMarketplaceCppoOpportunityRule(
                availability_end_date = '',
                id = '',
                negative_targeting = suger_sdk_python.models.aws_marketplace_cppo_opportunity_negative_targeting.AwsMarketplaceCppoOpportunityNegativeTargeting(
                    country_codes = [
                        ''
                        ], ),
                offers_max_quantity = 56,
                positive_targeting = suger_sdk_python.models.aws_marketplace_cppo_opportunity_positive_targeting.AwsMarketplaceCppoOpportunityPositiveTargeting(
                    buyer_accounts = [
                        suger_sdk_python.models.aws_marketplace_buyer_account.AwsMarketplaceBuyerAccount(
                            aws_account_id = '', )
                        ], 
                    country_codes = [
                        ''
                        ], ),
                reseller_account_id = '',
                reseller_legal_name = '',
                type = 'AvailabilityRule',
                usage = ''
            )
        else:
            return AwsMarketplaceCppoOpportunityRule(
        )
        """

    def testAwsMarketplaceCppoOpportunityRule(self):
        """Test AwsMarketplaceCppoOpportunityRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
