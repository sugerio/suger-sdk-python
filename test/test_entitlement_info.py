# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.entitlement_info import EntitlementInfo

class TestEntitlementInfo(unittest.TestCase):
    """EntitlementInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntitlementInfo:
        """Test EntitlementInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntitlementInfo`
        """
        model = EntitlementInfo()
        if include_optional:
            return EntitlementInfo(
                addons = [
                    {"amount":0.8008281904610115,"name":"name","description":"description","chargeOn":"2000-01-23T04:56:07.000+00:00","id":"id"}
                    ],
                alert_days_before_end = 56,
                alibaba_entitlements = [
                    {"Status":"Status","ProductName":"ProductName","EndOn":5,"InstanceId":2,"ProductCode":"ProductCode","Modules":{"Module":[{"Id":"Id","Properties":{"Property":[{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name","ShowType":"ShowType"},{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name","ShowType":"ShowType"}]},"Code":"Code","Name":"Name"},{"Id":"Id","Properties":{"Property":[{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name","ShowType":"ShowType"},{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name","ShowType":"ShowType"}]},"Code":"Code","Name":"Name"}]},"RelationalData":{"ServiceStatus":"ServiceStatus"},"AppJson":"AppJson","ProductType":"ProductType","OrderId":7,"Constraints":"Constraints","AutoRenewal":"AutoRenewal","ExtendJson":"ExtendJson","ComponentJson":"ComponentJson","IsTrial":true,"SupplierName":"SupplierName","ProductSkuCode":"ProductSkuCode","CreatedOn":5,"HostJson":"HostJson","BeganOn":1}
                    ],
                alibaba_orders = [
                    {"PaidOn":1,"CouponPrice":2.027123023002322,"PeriodType":"PeriodType","OriginalPrice":1.2315135367772556,"PayStatus":"PayStatus","ProductName":"ProductName","RequestId":"RequestId","ProductCode":"ProductCode","SupplierCompanyName":"SupplierCompanyName","Quantity":6,"OrderId":7,"SupplierTelephones":{"Telephone":["Telephone","Telephone"]},"Components":{"key":""},"OrderStatus":"OrderStatus","OrderType":"OrderType","TotalPrice":7.457744773683766,"ProductSkuCode":"ProductSkuCode","CreatedOn":4,"PaymentPrice":1.4894159098541704,"InstanceIds":{"InstanceId":["InstanceId","InstanceId"]},"AccountQuantity":9,"AliUid":3}
                    ],
                auto_renew = True,
                aws_agreement = suger_sdk_python.models.aws_marketplace_agreement_v2.AwsMarketplaceAgreementV2(
                    acceptance_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    agreement_id = '', 
                    agreement_type = '', 
                    buyer_account_id = '', 
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    offer_id = '', 
                    product_id = '', 
                    product_type = '', 
                    seller_account_id = '', 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'ACTIVE', ),
                aws_channel_partner = suger_sdk_python.models.aws_channel_partner.AwsChannelPartner(
                    id = '', 
                    name = '', ),
                aws_entitlements = [
                    {"productCode":"productCode","customerIdentifier":"customerIdentifier","dimension":"dimension","value":"{}","expirationDate":"expirationDate"}
                    ],
                azure_subscriptions = [
                    {"fulfillmentId":"fulfillmentId","quantity":1,"allowedCustomerOperations":["Read","Read"],"created":"2000-01-23T04:56:07.000+00:00","purchaser":{"firstName":"firstName","lastName":"lastName","licenseType":"licenseType","puid":"puid","customerId":"customerId","tenantId":"tenantId","billingAccountId":"billingAccountId","emailId":"emailId","objectId":"objectId"},"isFreeTrial":true,"sessionId":"sessionId","saasSubscriptionStatus":"NotStarted","publisherId":"publisherId","beneficiary":{"firstName":"firstName","lastName":"lastName","licenseType":"licenseType","puid":"puid","customerId":"customerId","tenantId":"tenantId","billingAccountId":"billingAccountId","emailId":"emailId","objectId":"objectId"},"isTest":true,"name":"name","autoRenew":true,"offerId":"offerId","planId":"planId","storeFront":"storeFront","term":{"endDate":"2000-01-23T04:56:07.000+00:00","chargeDuration":"chargeDuration","startDate":"2000-01-23T04:56:07.000+00:00","termUnit":"termUnit"},"id":"id","lastModified":"lastModified","sandboxType":"None","sessionMode":"None"}
                    ],
                billable_dimensions = [
                    {"priceModelTiered":"{}","priceModelTieredPercentage":"{}","priceModelMatrix":"{}","minimumCommit":1.4658129805029452,"length":6,"priceModelBulk":"{}","description":"description","discount":"{}","minimumCommitScope":"{}","minimumCommitProrata":true,"billableMetricId":"billableMetricId","priceModelPercentage":"{}","name":"name","priceModelBasic":"{}","category":"{}","priceModelVolume":"{}","timeUnit":"{}"}
                    ],
                billing_cycle = 'MONTH_FIRST_DAY',
                collectable_amount = 1.337,
                commit_amount = 1.337,
                commits = [
                    {"types":["types","types"],"quantity":3,"length":2,"description":"description","type":"{}","maximumUsers":706140,"rate":2.027123023002322,"isUserCreated":true,"minimumUsers":930144,"name":"name","term":"term","category":"category","termEndTime":"termEndTime","key":"key","timeUnit":"{}"}
                    ],
                currency = '',
                dimensions = [
                    {"priceTiers":[{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884},{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}],"types":["types","types"],"description":"description","planName":"planName","usageCount":"{}","rate":1.0246457001441578,"includedBaseQuantities":[{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"},{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"}],"valueType":"{}","name":"name","planId":"planId","category":"category","key":"key","skuId":"skuId"}
                    ],
                dimensions_oversized = True,
                disbursed_amount = 1.337,
                eula_type = '',
                eula_url = '',
                gcp_entitlements = [
                    {"newPendingOffer":"newPendingOffer","offerEffectiveTime":"2000-01-23T04:56:07.000+00:00","newPlan":"newPlan","offer":"offer","inputProperties":[9,9],"provider":"provider","offerEndTime":"2000-01-23T04:56:07.000+00:00","offerDuration":"offerDuration","consumers":[{"project":"project"},{"project":"project"}],"newOfferEndTime":"newOfferEndTime","subscriptionEndTime":"2000-01-23T04:56:07.000+00:00","id":"id","state":"{}","usageReportingId":"usageReportingId","plan":"plan","messageToUser":"messageToUser","product":"product","updateTime":"2000-01-23T04:56:07.000+00:00","newOfferDuration":"newOfferDuration","quoteExternalName":"quoteExternalName","createTime":"2000-01-23T04:56:07.000+00:00","newPendingPlan":"newPendingPlan","name":"name","newPendingOfferDuration":"newPendingOfferDuration","account":"account","productExternalName":"productExternalName","newOfferStartTime":"newOfferStartTime"}
                    ],
                gcp_plans = [
                    {"priceInfo":{"usageFees":[{"priceTiers":[{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884},{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}],"metricId":"metricId","displayQuantity":7},{"priceTiers":[{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884},{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}],"metricId":"metricId","displayQuantity":7}],"subscriptionPlans":[{"period":"period","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"}},{"period":"period","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"}}],"description":"description","priceModel":"FREE"},"purchaseMode":"PURCHASE_MODE_PRIVATE","name":"name","title":"title","featureValues":[{"featureValue":"featureValue","featureTitle":"featureTitle","featureName":"featureName","featureDescription":"featureDescription"},{"featureValue":"featureValue","featureTitle":"featureTitle","featureName":"featureName","featureDescription":"featureDescription"}]}
                    ],
                grace_period_in_days = 56,
                gross_amount = 1.337,
                invoiced_amount = 1.337,
                net_terms_in_days = 56,
                payment_installments = [
                    {"discountPercentage":8.762042012749001,"amount":9.369310271410669,"originalAmount":9.018348186070783,"chargeOn":"2000-01-23T04:56:07.000+00:00","chargeOnStr":"chargeOnStr","credit":6.683562403749608}
                    ],
                payment_schedule = '',
                refund_cancellation_policy = '',
                seller_notes = '',
                spa_url = '',
                trial_config = suger_sdk_python.models.trial_config.TrialConfig(
                    trial_period = 56, 
                    trial_period_unit = 'DAY', )
            )
        else:
            return EntitlementInfo(
        )
        """

    def testEntitlementInfo(self):
        """Test EntitlementInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
