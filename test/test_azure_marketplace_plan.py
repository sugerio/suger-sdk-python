# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.azure_marketplace_plan import AzureMarketplacePlan

class TestAzureMarketplacePlan(unittest.TestCase):
    """AzureMarketplacePlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureMarketplacePlan:
        """Test AzureMarketplacePlan
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureMarketplacePlan`
        """
        model = AzureMarketplacePlan()
        if include_optional:
            return AzureMarketplacePlan(
                var_schema = '',
                alias = '',
                azure_government_certifications = [
                    {"link":"link","name":"name"}
                    ],
                azure_regions = [
                    ''
                    ],
                deprecation_schedule = {"date":"date","reason":"criticalSecurityIssue","$schema":"$schema","alternative":{"product":"{}","plan":"{}"},"dateOffset":"dateOffset"},
                display_rank = 56,
                id = '',
                identity = {"externalId":"externalId"},
                lifecycle_state = 'notAvailable',
                product = '',
                resource_name = '',
                subtype = 'managedApplication',
                validations = [
                    {"resourceId":"resourceId","code":"businessValidationError","$schema":"$schema","level":"informational","message":"message"}
                    ]
            )
        else:
            return AzureMarketplacePlan(
        )
        """

    def testAzureMarketplacePlan(self):
        """Test AzureMarketplacePlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
