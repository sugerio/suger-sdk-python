# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.azure_marketplace_plan import \
    AzureMarketplacePlan  # noqa: E501


class TestAzureMarketplacePlan(unittest.TestCase):
    """AzureMarketplacePlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureMarketplacePlan:
        """Test AzureMarketplacePlan
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `AzureMarketplacePlan`
        """
        model = AzureMarketplacePlan()  # noqa: E501
        if include_optional:
            return AzureMarketplacePlan(
                var_schema = '',
                alias = '',
                azure_government_certifications = [
                    openapi_client.models.azure_marketplace_government_certification.AzureMarketplaceGovernmentCertification(
                        link = '', 
                        name = '', )
                    ],
                azure_regions = [
                    ''
                    ],
                deprecation_schedule = openapi_client.models.azure_marketplace_deprecation_schedule.AzureMarketplaceDeprecationSchedule(
                    __schema = '', 
                    alternative = openapi_client.models.azure_marketplace_deprecation_schedule_alternative.AzureMarketplaceDeprecationScheduleAlternative(
                        plan = openapi_client.models.plan.plan(), 
                        product = openapi_client.models.product.product(), ), 
                    date = '', 
                    date_offset = '', 
                    reason = 'criticalSecurityIssue', ),
                display_rank = 56,
                id = '',
                identity = openapi_client.models.azure_marketplace_identity.AzureMarketplaceIdentity(
                    external_id = '', ),
                lifecycle_state = 'notAvailable',
                product = '',
                resource_name = '',
                subtype = 'managedApplication',
                validations = [
                    openapi_client.models.azure_marketplace_validation.AzureMarketplaceValidation(
                        __schema = '', 
                        code = 'businessValidationError', 
                        level = 'informational', 
                        message = '', 
                        resource_id = '', )
                    ]
            )
        else:
            return AzureMarketplacePlan(
        )
        """

    def testAzureMarketplacePlan(self):
        """Test AzureMarketplacePlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
