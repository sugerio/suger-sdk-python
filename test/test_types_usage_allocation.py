# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.types_usage_allocation import (
    TypesUsageAllocation,
)  # noqa: E501


class TestTypesUsageAllocation(unittest.TestCase):
    """TypesUsageAllocation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TypesUsageAllocation:
        """Test TypesUsageAllocation
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TypesUsageAllocation`
        """
        model = TypesUsageAllocation()  # noqa: E501
        if include_optional:
            return TypesUsageAllocation(
                allocated_usage_quantity = 56,
                tags = [
                    openapi_client.models.github_com_aws_aws_sdk_go_v2_service_marketplacemetering_types/tag.github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag(
                        key = '', 
                        value = '', )
                    ]
            )
        else:
            return TypesUsageAllocation(
        )
        """

    def testTypesUsageAllocation(self):
        """Test TypesUsageAllocation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
