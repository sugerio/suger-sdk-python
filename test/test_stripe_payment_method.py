# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.stripe_payment_method import StripePaymentMethod

class TestStripePaymentMethod(unittest.TestCase):
    """StripePaymentMethod unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StripePaymentMethod:
        """Test StripePaymentMethod
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StripePaymentMethod`
        """
        model = StripePaymentMethod()
        if include_optional:
            return StripePaymentMethod(
                bacs_debit = {"last4":"last4","fingerprint":"fingerprint","sort_code":"sort_code"},
                card = {"country":"country","last4":"last4","funding":"funding","display_brand":"display_brand","fingerprint":"fingerprint","exp_month":0,"exp_year":6,"brand":"brand"},
                created = 56,
                id = '',
                livemode = True,
                object = '',
                sepa_debit = {"branch_code":"branch_code","bank_code":"bank_code","country":"country","last4":"last4","fingerprint":"fingerprint"},
                us_bank_account = {"last4":"last4","account_type":"account_type","account_holder_type":"account_holder_type","bank_name":"bank_name","fingerprint":"fingerprint","routing_number":"routing_number"}
            )
        else:
            return StripePaymentMethod(
        )
        """

    def testStripePaymentMethod(self):
        """Test StripePaymentMethod"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
