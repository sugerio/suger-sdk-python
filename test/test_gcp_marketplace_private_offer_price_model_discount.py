# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest


from openapi_client.models.gcp_marketplace_private_offer_price_model_discount import (
    GcpMarketplacePrivateOfferPriceModelDiscount,
)  # noqa: E501


class TestGcpMarketplacePrivateOfferPriceModelDiscount(unittest.TestCase):
    """GcpMarketplacePrivateOfferPriceModelDiscount unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> GcpMarketplacePrivateOfferPriceModelDiscount:
        """Test GcpMarketplacePrivateOfferPriceModelDiscount
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GcpMarketplacePrivateOfferPriceModelDiscount`
        """
        model = GcpMarketplacePrivateOfferPriceModelDiscount()  # noqa: E501
        if include_optional:
            return GcpMarketplacePrivateOfferPriceModelDiscount(
                discount_percentage = openapi_client.models.gcp_discount_percentage.GcpDiscountPercentage(
                    nanos = 56, 
                    units = '', ),
                discounted_price = openapi_client.models.gcp_price_value.GcpPriceValue(
                    currency_code = '', 
                    nanos = 56, 
                    units = '', )
            )
        else:
            return GcpMarketplacePrivateOfferPriceModelDiscount(
        )
        """

    def testGcpMarketplacePrivateOfferPriceModelDiscount(self):
        """Test GcpMarketplacePrivateOfferPriceModelDiscount"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
