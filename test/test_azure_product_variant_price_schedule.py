# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.azure_product_variant_price_schedule import AzureProductVariantPriceSchedule

class TestAzureProductVariantPriceSchedule(unittest.TestCase):
    """AzureProductVariantPriceSchedule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureProductVariantPriceSchedule:
        """Test AzureProductVariantPriceSchedule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureProductVariantPriceSchedule`
        """
        model = AzureProductVariantPriceSchedule()
        if include_optional:
            return AzureProductVariantPriceSchedule(
                date_time_range = {"endAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true},"startAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true}},
                friendly_name = '',
                is_base_schedule = True,
                market_codes = [
                    ''
                    ],
                schedules = [
                    {"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}}
                    ]
            )
        else:
            return AzureProductVariantPriceSchedule(
        )
        """

    def testAzureProductVariantPriceSchedule(self):
        """Test AzureProductVariantPriceSchedule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
