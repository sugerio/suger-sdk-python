# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workload_product import \
    WorkloadProduct  # noqa: E501


class TestWorkloadProduct(unittest.TestCase):
    """WorkloadProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkloadProduct:
        """Test WorkloadProduct
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `WorkloadProduct`
        """
        model = WorkloadProduct()  # noqa: E501
        if include_optional:
            return WorkloadProduct(
                created_by = '',
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                external_id = '',
                fulfillment_url = '',
                id = '',
                info = openapi_client.models.product_info.ProductInfo(
                    alibaba_product = openapi_client.models.alibaba_marketplace_product.AlibabaMarketplaceProduct(
                        audit_fail_msg = '', 
                        audit_status = '', 
                        audit_time = 56, 
                        code = '', 
                        description = '', 
                        front_category_id = 56, 
                        gmt_created = 56, 
                        gmt_modified = 56, 
                        name = '', 
                        pic_url = '', 
                        product_extras = openapi_client.models.alibaba_marketplace_product_extras.AlibabaMarketplaceProductExtras(
                            product_extra = [
                                openapi_client.models.alibaba_marketplace_product_extra.AlibabaMarketplaceProductExtra(
                                    key = '', 
                                    label = '', 
                                    order = 56, 
                                    type = '', 
                                    values = openapi_client.models.values.Values(), )
                                ], ), 
                        product_skus = openapi_client.models.alibaba_marketplace_product_skus.AlibabaMarketplaceProductSkus(
                            product_sku = [
                                openapi_client.models.alibaba_marketplace_product_sku.AlibabaMarketplaceProductSku(
                                    charge_type = '', 
                                    code = '', 
                                    constraints = '', 
                                    hidden = True, 
                                    modules = openapi_client.models.alibaba_marketplace_product_sku_modules.AlibabaMarketplaceProductSkuModules(
                                        module = [
                                            openapi_client.models.alibaba_marketplace_product_sku_module.AlibabaMarketplaceProductSkuModule(
                                                code = '', 
                                                id = '', 
                                                name = '', 
                                                properties = openapi_client.models.alibaba_marketplace_product_sku_module_properties.AlibabaMarketplaceProductSkuModuleProperties(
                                                    property = [
                                                        openapi_client.models.alibaba_marketplace_product_sku_module_property.AlibabaMarketplaceProductSkuModuleProperty(
                                                            display_unit = '', 
                                                            key = '', 
                                                            name = '', 
                                                            property_values = openapi_client.models.alibaba_marketplace_product_sku_module_property_values.AlibabaMarketplaceProductSkuModulePropertyValues(
                                                                property_value = [
                                                                    openapi_client.models.alibaba_marketplace_product_sku_module_property_value.AlibabaMarketplaceProductSkuModulePropertyValue(
                                                                        display_name = '', 
                                                                        max = '', 
                                                                        min = '', 
                                                                        remark = '', 
                                                                        step = '', 
                                                                        type = '', 
                                                                        value = '', )
                                                                    ], ), 
                                                            show_type = '', )
                                                        ], ), )
                                            ], ), 
                                    name = '', 
                                    order_periods = openapi_client.models.alibaba_marketplace_product_sku_order_periods.AlibabaMarketplaceProductSkuOrderPeriods(
                                        order_period = [
                                            openapi_client.models.alibaba_marketplace_product_sku_order_period.AlibabaMarketplaceProductSkuOrderPeriod(
                                                name = '', 
                                                period_type = '', )
                                            ], ), )
                                ], ), 
                        request_id = '', 
                        score = 1.337, 
                        shop_info = openapi_client.models.alibaba_marketplace_product_shop_info.AlibabaMarketplaceProductShopInfo(
                            emails = '', 
                            id = 56, 
                            name = '', 
                            telephones = openapi_client.models.alibaba_marketplace_product_shop_info_telephones.AlibabaMarketplaceProductShopInfoTelephones(
                                telephone = [
                                    ''
                                    ], ), 
                            wang_wangs = openapi_client.models.alibaba_marketplace_product_shop_info_wang_wangs.AlibabaMarketplaceProductShopInfoWangWangs(
                                wang_wang = [
                                    openapi_client.models.alibaba_marketplace_product_shop_info_wang_wang.AlibabaMarketplaceProductShopInfoWangWang(
                                        remark = '', 
                                        user_name = '', )
                                    ], ), ), 
                        short_description = '', 
                        status = '', 
                        supplier_pk = 56, 
                        type = '', 
                        use_count = 56, ), 
                    attributes = {
                        'key' : ''
                        }, 
                    aws_saas_product = openapi_client.models.aws_saas_product.AwsSaasProduct(
                        description = openapi_client.models.aws_saas_product_description.AwsSaasProductDescription(
                            associated_products = '', 
                            categories = [
                                ''
                                ], 
                            eu_w8_submitted = True, 
                            highlights = [
                                ''
                                ], 
                            long_description = '', 
                            manufacturer = '', 
                            product_code = '', 
                            product_title = '', 
                            registered = True, 
                            search_keywords = [
                                ''
                                ], 
                            short_description = '', 
                            sku = '', 
                            us_w9_submitted = True, 
                            visibility = '', ), 
                        dimensions = [
                            openapi_client.models.aws_saas_product_dimension.AwsSaasProductDimension(
                                key = '', 
                                name = '', 
                                types = [
                                    ''
                                    ], 
                                unit = '', )
                            ], 
                        promotional_resources = openapi_client.models.aws_saas_product_promotional_resources.AwsSaasProductPromotionalResources(
                            additional_resources = [
                                openapi_client.models.aws_saas_product_additional_resource.AwsSaasProductAdditionalResource(
                                    text = '', 
                                    type = '', 
                                    url = '', )
                                ], 
                            logo_url = '', 
                            video_urls = [
                                ''
                                ], ), 
                        support_information = openapi_client.models.aws_saas_product_support_information.AwsSaasProductSupportInformation(), 
                        versions = [
                            openapi_client.models.aws_saas_product_version.AwsSaasProductVersion(
                                delivery_options = [
                                    openapi_client.models.aws_saas_product_delivery_option.AwsSaasProductDeliveryOption(
                                        fulfillment_url = '', 
                                        id = '', 
                                        type = '', )
                                    ], 
                                id = '', )
                            ], 
                        data_feed_product_id = '', 
                        product_id = '', ), 
                    aws_sns_subscriptions = [
                        openapi_client.models.aws_sns_subscription.AwsSnsSubscription(
                            endpoint = '', 
                            protocol = '', 
                            status = 'UNKNOWN', 
                            subscription_arn = '', 
                            topic_arn = '', )
                        ], 
                    azure_product = openapi_client.models.azure_product.AzureProduct(
                        availabilities = [
                            openapi_client.models.azure_product_availability.AzureProductAvailability(
                                email_audiences = [
                                    openapi_client.models.azure_audience.AzureAudience(
                                        description = '', 
                                        id = '', )
                                    ], 
                                enterprise_licensing = '', 
                                id = '', 
                                resource_type = '', 
                                subscription_audiences = [
                                    openapi_client.models.azure_audience.AzureAudience(
                                        description = '', 
                                        id = '', )
                                    ], 
                                visibility = '', )
                            ], 
                        branches = [
                            openapi_client.models.azure_product_branch.AzureProductBranch(
                                current_draft_instance_id = '', 
                                friendly_name = '', 
                                id = '', 
                                module = '', 
                                resource_type = '', 
                                type = '', 
                                variant_id = '', )
                            ], 
                        external_ids = [
                            openapi_client.models.azure_type_value.AzureTypeValue(
                                type = '', 
                                value = '', )
                            ], 
                        id = '', 
                        is_modular_publishing = True, 
                        listings = [
                            openapi_client.models.azure_product_listing.AzureProductListing(
                                access_information = '', 
                                assets = [
                                    openapi_client.models.azure_product_listing_asset.AzureProductListingAsset(
                                        description = '', 
                                        file_name = '', 
                                        file_sas_uri = '', 
                                        friendly_name = '', 
                                        id = '', 
                                        order = 56, 
                                        publisher_defined_sas_uri = '', 
                                        resource_type = 'ListingAsset', 
                                        state = 'PendingUpload', 
                                        type = '', )
                                    ], 
                                compatible_products = [
                                    ''
                                    ], 
                                description = '', 
                                getting_started_instructions = '', 
                                id = '', 
                                keywords = [
                                    ''
                                    ], 
                                language_code = '', 
                                listing_contacts = [
                                    openapi_client.models.azure_listing_contact.AzureListingContact(
                                        email = '', 
                                        name = '', 
                                        phone = '', 
                                        type = 'CustomerSupport', 
                                        uri = '', )
                                    ], 
                                listing_uris = [
                                    openapi_client.models.azure_listing_uri.AzureListingUri(
                                        display_text = '', 
                                        subtype = '', 
                                        type = '', 
                                        uri = '', )
                                    ], 
                                product_display_name = '', 
                                publisher_name = '', 
                                resource_type = 'AzureListing', 
                                short_description = '', 
                                summary = '', 
                                title = '', )
                            ], 
                        name = '', 
                        package_configurations = [
                            openapi_client.models.azure_product_package_configuration.AzureProductPackageConfiguration(
                                azure_active_directory_application_id = '', 
                                azure_active_directory_tenant_id = '', 
                                connection_webhook = '', 
                                id = '', 
                                landing_page_uri = '', 
                                resource_type = 'AzureSoftwareAsAServicePackageConfiguration', )
                            ], 
                        plans = [
                            openapi_client.models.azure_marketplace_price_and_availability_private_offer_plan.AzureMarketplacePriceAndAvailabilityPrivateOfferPlan(
                                __schema = '', 
                                id = '', 
                                plan = '', 
                                plan_name = '', 
                                pricing = openapi_client.models.azure_marketplace_price_and_availability_private_offer_price.AzureMarketplacePriceAndAvailabilityPrivateOfferPrice(
                                    custom_meters = openapi_client.models.azure_marketplace_price_and_availability_private_offer_custom_meters.AzureMarketplacePriceAndAvailabilityPrivateOfferCustomMeters(
                                        meters = openapi_client.models.meters.meters(), 
                                        price_input_option = 'perMarket', ), 
                                    recurrent_price = openapi_client.models.azure_marketplace_price_and_availability_recurrent_price.AzureMarketplacePriceAndAvailabilityRecurrentPrice(
                                        price_input_option = 'perMarket', 
                                        prices = [
                                            openapi_client.models.azure_marketplace_price_and_availability_recurrent_price_item.AzureMarketplacePriceAndAvailabilityRecurrentPriceItem(
                                                billing_term = openapi_client.models.azure_marketplace_term.AzureMarketplaceTerm(
                                                    type = 'day', 
                                                    value = 1.337, ), 
                                                payment_option = openapi_client.models.azure_marketplace_term.AzureMarketplaceTerm(
                                                    type = 'day', 
                                                    value = 1.337, ), 
                                                price_per_payment_in_usd = 1.337, )
                                            ], ), ), 
                                product = '', 
                                resource_name = '', 
                                validations = [
                                    openapi_client.models.azure_marketplace_validation.AzureMarketplaceValidation(
                                        __schema = '', 
                                        code = 'businessValidationError', 
                                        level = 'informational', 
                                        message = '', 
                                        resource_id = '', )
                                    ], )
                            ], 
                        properties = [
                            openapi_client.models.azure_product_property.AzureProductProperty(
                                additional_categories = [
                                    ''
                                    ], 
                                app_version = '', 
                                applicable_products = [
                                    ''
                                    ], 
                                categories = [
                                    ''
                                    ], 
                                custom_amendments = [
                                    ''
                                    ], 
                                extended_properties = [
                                    ''
                                    ], 
                                global_amendment_terms = '', 
                                hide_keys = [
                                    ''
                                    ], 
                                id = '', 
                                industries = [
                                    ''
                                    ], 
                                leveled_categories = { }, 
                                leveled_industries = { }, 
                                marketing_only_change = True, 
                                product_tags = [
                                    ''
                                    ], 
                                resource_type = '', 
                                submission_version = '', 
                                terms_of_use = '', 
                                use_enterprise_contract = True, )
                            ], 
                        resource_type = '', 
                        setup = openapi_client.models.setup.setup(), 
                        submissions = [
                            openapi_client.models.azure_product_submission.AzureProductSubmission(
                                are_resources_ready = True, 
                                friendly_name = '', 
                                id = '', 
                                pending_update_info = openapi_client.models.azure_pending_update_info.AzurePendingUpdateInfo(
                                    status = '', 
                                    update_type = '', ), 
                                published_time_in_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                release_number = 56, 
                                resource_type = 'Submission', 
                                resources = [
                                    openapi_client.models.azure_type_value.AzureTypeValue(
                                        type = '', 
                                        value = '', )
                                    ], 
                                state = 'Inprogress', 
                                sub_state = 'InDraft', 
                                targets = [
                                    
                                    ], 
                                variant_resources = [
                                    openapi_client.models.azure_variant_resource.AzureVariantResource(
                                        variant_id = '', )
                                    ], )
                            ], 
                        variants = [
                            openapi_client.models.azure_product_variant.AzureProductVariant(
                                azure_government_certifications = [
                                    openapi_client.models.azure_government_certification.AzureGovernmentCertification(
                                        title = '', 
                                        uri = '', 
                                        validation_results = [
                                            openapi_client.models.azure_validation_result.AzureValidationResult(
                                                error_message = '', 
                                                member_names = [
                                                    ''
                                                    ], )
                                            ], )
                                    ], 
                                cloud_availabilities = [
                                    ''
                                    ], 
                                conversion_paths = '', 
                                external_id = '', 
                                feature_availabilities = [
                                    openapi_client.models.azure_product_feature_availability.AzureProductFeatureAvailability(
                                        id = '', 
                                        is_hidden = True, 
                                        market_states = [
                                            openapi_client.models.azure_market_state.AzureMarketState(
                                                market_code = '', 
                                                state = 'Disabled', )
                                            ], 
                                        markets = [
                                            openapi_client.models.azure_market.AzureMarket(
                                                friendly_name = '', 
                                                market_code = '', )
                                            ], 
                                        price_schedules = [
                                            openapi_client.models.azure_product_variant_price_schedule.AzureProductVariantPriceSchedule(
                                                date_time_range = openapi_client.models.azure_localized_time_range.AzureLocalizedTimeRange(
                                                    end_at = openapi_client.models.azure_localized_date_time.AzureLocalizedDateTime(
                                                        date_time_in_utc = '', 
                                                        localize_per_market = True, ), 
                                                    start_at = openapi_client.models.azure_localized_date_time.AzureLocalizedDateTime(
                                                        date_time_in_utc = '', 
                                                        localize_per_market = True, ), ), 
                                                friendly_name = '', 
                                                is_base_schedule = True, 
                                                market_codes = [
                                                    ''
                                                    ], 
                                                schedules = [
                                                    openapi_client.models.azure_price_schedule.AzurePriceSchedule(
                                                        price_cadence = openapi_client.models.azure_price_cadence.AzurePriceCadence(
                                                            type = 'Month', 
                                                            value = 56, ), 
                                                        pricing_model = 'Flat', 
                                                        pricing_units = [
                                                            openapi_client.models.azure_pricing_unit.AzurePricingUnit(
                                                                is_unlimited_unit = True, 
                                                                lower_unit = 56, 
                                                                name = 'sharedcore', 
                                                                unit_type = '', 
                                                                upper_unit = 56, )
                                                            ], 
                                                        retail_price = openapi_client.models.azure_price.AzurePrice(
                                                            currency_code = '', 
                                                            open_price = 1.337, 
                                                            price_tier_id = '', ), )
                                                    ], )
                                            ], 
                                        resource_type = '', 
                                        tenant_audiences = [
                                            
                                            ], 
                                        trial = openapi_client.models.azure_product_variant_trial.AzureProductVariantTrial(
                                            duration = 56, 
                                            duration_type = 'Minute', 
                                            type = 'NoTrial', ), 
                                        visibility = 'Public', )
                                    ], 
                                friendly_name = '', 
                                id = '', 
                                lead_gen_id = '', 
                                reference_variant_id = '', 
                                resource_type = 'AzureSkuVariant', 
                                state = 'InActive', )
                            ], ), 
                    azure_product_resource = openapi_client.models.azure_marketplace_product_resource.AzureMarketplaceProductResource(
                        customer_leads = openapi_client.models.azure_marketplace_customer_leads.AzureMarketplaceCustomerLeads(
                            __schema = '', 
                            blob_lead_configuration = openapi_client.models.blob_lead_configuration.blobLeadConfiguration(), 
                            dynamics_lead_configuration = openapi_client.models.dynamics_lead_configuration.dynamicsLeadConfiguration(), 
                            email_lead_configuration = openapi_client.models.email_lead_configuration.emailLeadConfiguration(), 
                            https_endpoint_lead_configuration = openapi_client.models.https_endpoint_lead_configuration.httpsEndpointLeadConfiguration(), 
                            id = '', 
                            lead_destination = 'none', 
                            marketo_lead_configuration = openapi_client.models.marketo_lead_configuration.marketoLeadConfiguration(), 
                            product = '', 
                            resource_name = '', 
                            salesforce_lead_configuration = openapi_client.models.salesforce_lead_configuration.salesforceLeadConfiguration(), 
                            table_lead_configuration = openapi_client.models.table_lead_configuration.tableLeadConfiguration(), ), 
                        listing = openapi_client.models.azure_marketplace_listing.AzureMarketplaceListing(
                            __schema = '', 
                            cloud_solution_provider_contact = openapi_client.models.azure_marketplace_contact.AzureMarketplaceContact(
                                email = '', 
                                name = '', 
                                phone = '', 
                                url = '', ), 
                            cloud_solution_provider_marketing_materials = '', 
                            description = '', 
                            engineering_contact = openapi_client.models.azure_marketplace_contact.AzureMarketplaceContact(
                                email = '', 
                                name = '', 
                                phone = '', 
                                url = '', ), 
                            general_links = [
                                openapi_client.models.azure_marketplace_general_link.AzureMarketplaceGeneralLink(
                                    display_text = '', 
                                    link = '', )
                                ], 
                            getting_started_instructions = '', 
                            gloabal_support_website = '', 
                            government_support_website = '', 
                            id = '', 
                            kind = 'azureSaaS', 
                            language_id = '', 
                            lifecycle_state = openapi_client.models.lifecycle_state.lifecycleState(), 
                            privacy_policy_link = '', 
                            product = '', 
                            resource_name = '', 
                            search_keywords = [
                                ''
                                ], 
                            search_result_summary = '', 
                            short_description = '', 
                            support_contact = , 
                            title = '', ), 
                        listing_assets = [
                            openapi_client.models.azure_marketplace_listing_asset.AzureMarketplaceListingAsset(
                                __schema = '', 
                                description = '', 
                                display_order = 56, 
                                file_name = '', 
                                friendly_name = '', 
                                id = '', 
                                kind = 'azure', 
                                language_id = '', 
                                lifecycle_state = openapi_client.models.lifecycle_state.lifecycleState(), 
                                product = '', 
                                resource_name = '', 
                                type = 'azureLogoSmall', 
                                url = '', )
                            ], 
                        price_and_availability_custom_meter = openapi_client.models.azure_marketplace_price_and_availability_custom_meter.AzureMarketplacePriceAndAvailabilityCustomMeter(
                            __schema = '', 
                            id = '', 
                            product = '', 
                            resource_name = '', ), 
                        price_and_availability_offer = openapi_client.models.azure_marketplace_price_and_availability_offer.AzureMarketplacePriceAndAvailabilityOffer(
                            __schema = '', 
                            id = '', 
                            preview_audiences = [
                                openapi_client.models.azure_marketplace_price_and_availability_audience.AzureMarketplacePriceAndAvailabilityAudience(
                                    id = '', 
                                    label = '', )
                                ], 
                            product = '', 
                            resource_name = '', ), 
                        product = openapi_client.models.azure_marketplace_product.AzureMarketplaceProduct(
                            __schema = '', 
                            alias = '', 
                            id = '', 
                            identity = openapi_client.models.azure_marketplace_identity.AzureMarketplaceIdentity(
                                external_id = '', ), 
                            lifecycle_state = 'notAvailable', 
                            product_group = '', 
                            resource_name = '', ), 
                        property = openapi_client.models.azure_marketplace_property.AzureMarketplaceProperty(
                            __schema = '', 
                            app_version = '', 
                            cloud_industries = {
                                'key' : [
                                    ''
                                    ]
                                }, 
                            id = '', 
                            kind = 'azureSaaS', 
                            resource_name = '', 
                            standard_contract_amendment = '', 
                            terms_conditions = 'custom', 
                            terms_of_use = '', 
                            terms_of_use_url = '', ), 
                        reseller = openapi_client.models.azure_marketplace_reseller.AzureMarketplaceReseller(
                            __schema = '', 
                            id = '', 
                            reseller_channel_state = 'noSet', 
                            resource_name = '', ), 
                        setup = openapi_client.models.azure_commercial_marketplace_setup.AzureCommercialMarketplaceSetup(
                            __schema = '', 
                            access_url = '', 
                            call_to_action = 'free', 
                            id = '', 
                            require_license_for_install = True, 
                            resource_name = '', 
                            sell_through_microsoft = True, 
                            use_microsoft_license_management_service = True, ), 
                        technical_configuration = openapi_client.models.azure_marketplace_saas_technical_configuration.AzureMarketplaceSaasTechnicalConfiguration(
                            __schema = '', 
                            azure_ad_app_id = '', 
                            azure_ad_tenant_id = '', 
                            connection_webhook = '', 
                            id = '', 
                            landing_page_url = '', 
                            resource_name = '', ), ), 
                    commits = [
                        openapi_client.models.commit_dimension.CommitDimension(
                            category = '', 
                            description = '', 
                            is_user_created = True, 
                            key = '', 
                            length = 56, 
                            maximum_users = 1, 
                            minimum_users = 1, 
                            name = '', 
                            quantity = 56, 
                            rate = 1.337, 
                            term = '', 
                            term_end_time = '', 
                            time_unit = openapi_client.models.time_unit.timeUnit(), 
                            types = [
                                ''
                                ], )
                        ], 
                    currency = '', 
                    dimensions = [
                        openapi_client.models.metering_dimension.MeteringDimension(
                            category = '', 
                            description = '', 
                            included_base_quantities = [
                                openapi_client.models.azure_included_base_quantity.AzureIncludedBaseQuantity(
                                    is_infinite = True, 
                                    quantity = 1.337, 
                                    recurring_unit = 'Monthly', )
                                ], 
                            key = '', 
                            name = '', 
                            plan_id = '', 
                            plan_name = '', 
                            price_tiers = [
                                openapi_client.models.gcp_price_tier.GcpPriceTier(
                                    from_amount = 1.337, 
                                    price = openapi_client.models.gcp_price_value.GcpPriceValue(
                                        currency_code = '', 
                                        nanos = 56, 
                                        units = '', ), 
                                    starting_usage_amount = '', )
                                ], 
                            rate = 1.337, 
                            sku_id = '', 
                            usage_count = openapi_client.models.usage_count.usageCount(), 
                            value_type = openapi_client.models.value_type.valueType(), )
                        ], 
                    eula_url = '', 
                    gcp_product = openapi_client.models.gcp_marketplace_product.GcpMarketplaceProduct(
                        create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        derived_discovery_state = openapi_client.models.gcp_marketplace_product_derived_discovery_state.GcpMarketplaceProductDerivedDiscoveryState(
                            access_state = 'ALLUSERS_ACCESSIBLE', 
                            search_state = 'ADMIN_OVERRIDE_UNSEARCHABLE', ), 
                        id = '', 
                        last_publish_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        listing_spec = openapi_client.models.gcp_marketplace_product_listing_spec.GcpMarketplaceProductListingSpec(
                            external_account_spec = openapi_client.models.gcp_marketplace_product_external_account_spec.GcpMarketplaceProductExternalAccountSpec(
                                login_uri = '', 
                                signup_uri = '', 
                                single_sign_on_uri = '', ), 
                            listing_type = 'BillingIntegratedManagedService', 
                            marketing_spec = openapi_client.models.gcp_marketplace_product_marketing_spec.GcpMarketplaceProductMarketingSpec(
                                description = '', 
                                display_names = [
                                    ''
                                    ], 
                                documentation_specs = [
                                    openapi_client.models.gcp_marketplace_product_documentation_spec.GcpMarketplaceProductDocumentationSpec(
                                        description = '', 
                                        title = '', 
                                        uri = '', )
                                    ], 
                                eula_url = '', 
                                external_license_specs = [
                                    openapi_client.models.gcp_marketplace_product_license_spec.GcpMarketplaceProductLicenseSpec(
                                        description = '', 
                                        uri = '', )
                                    ], 
                                external_marketing_url = '', 
                                icon = '', 
                                search_categories = [
                                    ''
                                    ], 
                                search_description = '', 
                                signup_uri = '', 
                                support_spec = openapi_client.models.gcp_marketplace_product_support_spec.GcpMarketplaceProductSupportSpec(
                                    description = '', 
                                    email = '', 
                                    uri = '', ), 
                                tag_line = '', 
                                title = '', ), 
                            purchase_spec = openapi_client.models.gcp_marketplace_product_purchase_spec.GcpMarketplaceProductPurchaseSpec(
                                features = [
                                    openapi_client.models.gcp_marketplace_product_feature.GcpMarketplaceProductFeature(
                                        description = '', 
                                        name = '', 
                                        title = '', )
                                    ], 
                                metrics = [
                                    openapi_client.models.gcp_marketplace_product_metering_metric.GcpMarketplaceProductMeteringMetric(
                                        description = '', 
                                        display_name = '', 
                                        display_unit = '', 
                                        display_unit_description = '', 
                                        id = '', 
                                        metric_kind = '', 
                                        name = '', 
                                        reporting_unit = '', 
                                        sku_id = '', 
                                        unit = '', 
                                        value_type = openapi_client.models.value_type.valueType(), )
                                    ], 
                                purchase_option_specs = [
                                    openapi_client.models.gcp_marketplace_product_purchase_option_spec.GcpMarketplaceProductPurchaseOptionSpec(
                                        feature_values = [
                                            openapi_client.models.gcp_marketplace_product_feature_value.GcpMarketplaceProductFeatureValue(
                                                feature_description = '', 
                                                feature_name = '', 
                                                feature_title = '', 
                                                feature_value = '', )
                                            ], 
                                        name = '', 
                                        price_info = openapi_client.models.gcp_marketplace_product_price_info.GcpMarketplaceProductPriceInfo(
                                            description = '', 
                                            price_model = 'FREE', 
                                            subscription_plans = [
                                                openapi_client.models.gcp_marketplace_product_subscription_plan.GcpMarketplaceProductSubscriptionPlan(
                                                    period = '', )
                                                ], 
                                            usage_fees = [
                                                openapi_client.models.gcp_marketplace_product_usage_fee.GcpMarketplaceProductUsageFee(
                                                    display_quantity = 56, 
                                                    metric_id = '', )
                                                ], ), 
                                        purchase_mode = 'PURCHASE_MODE_PRIVATE', 
                                        title = '', )
                                    ], ), 
                            terms_spec = openapi_client.models.gcp_marketplace_product_terms_spec.GcpMarketplaceProductTermsSpec(
                                eula_uri = '', 
                                inline_eula = openapi_client.models.inline_eula.inlineEula(), 
                                standard_eula = openapi_client.models.standard_eula.standardEula(), ), ), 
                        marketplace = 'marketplaces/google-cloud', 
                        name = '', 
                        revision_create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        revision_id = '', 
                        service = '', 
                        service_config = openapi_client.models.gcp_marketplace_product_service_config.GcpMarketplaceProductServiceConfig(
                            billing = openapi_client.models.gcp_marketplace_product_service_config_billing.GcpMarketplaceProductServiceConfigBilling(), 
                            name = '', 
                            producer_project_id = '', 
                            title = '', ), 
                        validation_summary = openapi_client.models.validation_summary.validationSummary(), ), 
                    refund_cancelation_policy = '', 
                    seller_notes = '', ),
                last_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated_by = '',
                meta_info = openapi_client.models.workload_meta_info.WorkloadMetaInfo(
                    base_agreement_id = '', 
                    buyer_ids = [
                        ''
                        ], 
                    contacts = [
                        openapi_client.models.contact.Contact(
                            company = '', 
                            email = '', 
                            name = '', )
                        ], 
                    custom_meta_info = {
                        'key' : ''
                        }, 
                    error_messages = [
                        ''
                        ], 
                    internal_note = '', 
                    is_agreement_based_offer = True, 
                    is_renewal_offer = True, 
                    notifications = [
                        openapi_client.models.notification_event.NotificationEvent(
                            action = 'ACCEPT', 
                            cc_contact_ids = [
                                ''
                                ], 
                            contact_ids = [
                                ''
                                ], 
                            entity_id = '', 
                            entity_status = '', 
                            entity_type = 'ORGANIZATION', 
                            event_id = '', 
                            event_status = openapi_client.models.event_status.eventStatus(), 
                            last_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            message = '', 
                            organization_id = '', 
                            partner = openapi_client.models.partner.partner(), 
                            timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            title = '', 
                            track_events = [
                                openapi_client.models.track_event.TrackEvent(
                                    contact_id = '', 
                                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], )
                        ], 
                    renewal_offer_type = openapi_client.models.renewal_offer_type.renewalOfferType(), ),
                name = '',
                organization_id = '',
                partner = '',
                product_type = 'UNKNOWN',
                service = 'DEFAULT',
                status = ''
            )
        else:
            return WorkloadProduct(
        )
        """

    def testWorkloadProduct(self):
        """Test WorkloadProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
