# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.github_com_sugerio_marketplace_service_rds_db_lib_billing_aws_billing_event import \
    GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent  # noqa: E501


class TestGithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent(
    unittest.TestCase
):
    """GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent:
        """Test GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent`
        """
        model = GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent()  # noqa: E501
        if include_optional:
            return GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent(
                action = '',
                agreement_id = '',
                amount = 1.337,
                balance_impacting = 56,
                bank_trace_id = '',
                billing_address_id = '',
                broker_id = '',
                buyer_id = '',
                currency = '',
                data_feed_product_id = '',
                disbursement_billing_event_id = '',
                end_user_account_id = '',
                entitlement_id = '',
                from_account_id = '',
                id = '',
                insert_date = openapi_client.models.sql/null_time.sql.NullTime(
                    time = '', 
                    valid = True, ),
                invoice_date = openapi_client.models.sql/null_time.sql.NullTime(
                    time = '', 
                    valid = True, ),
                invoice_id = '',
                offer_id = '',
                organization_id = '',
                parent_billing_event_id = '',
                payment_due_date = openapi_client.models.sql/null_time.sql.NullTime(
                    time = '', 
                    valid = True, ),
                product_id = '',
                to_account_id = '',
                transaction_reference_id = '',
                transaction_type = '',
                usage_period_end_date = openapi_client.models.sql/null_time.sql.NullTime(
                    time = '', 
                    valid = True, ),
                usage_period_start_date = openapi_client.models.sql/null_time.sql.NullTime(
                    time = '', 
                    valid = True, )
            )
        else:
            return GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent(
        )
        """

    def testGithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent(self):
        """Test GithubComSugerioMarketplaceServiceRdsDbLibBillingAwsBillingEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
