# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.billing_invoice import BillingInvoice

class TestBillingInvoice(unittest.TestCase):
    """BillingInvoice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingInvoice:
        """Test BillingInvoice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingInvoice`
        """
        model = BillingInvoice()
        if include_optional:
            return BillingInvoice(
                buyer_id = '',
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                entitlement_id = '',
                id = '',
                info = {"netTermsInDays":1,"trialPeriodInDays":1,"amount":5.637376656633329,"addonDetail":{"amount":0.8008281904610115,"name":"name","description":"description","chargeOn":"2000-01-23T04:56:07.000+00:00","id":"id"},"commitsRevenueDetails":[{"amount":3.616076749251911,"expression":"expression","quantity":2,"rate":4.145608029883936,"name":"name","description":"description","key":"key"},{"amount":3.616076749251911,"expression":"expression","quantity":2,"rate":4.145608029883936,"name":"name","description":"description","key":"key"}],"dueDate":"2000-01-23T04:56:07.000+00:00","adjustDiscountByDimensions":[{"reason":"reason","dimensionKey":"dimensionKey","discount":{"discountType":"PERCENTAGE","value":1.4658129805029452}},{"reason":"reason","dimensionKey":"dimensionKey","discount":{"discountType":"PERCENTAGE","value":1.4658129805029452}}],"description":"description","gracePeriodInDays":7,"memo":"memo","creationDate":"2000-01-23T04:56:07.000+00:00","addFixedFees":[{"reason":"reason","quantity":0,"endDate":"2000-01-23T04:56:07.000+00:00","rate":6.027456183070403,"startDate":"2000-01-23T04:56:07.000+00:00"},{"reason":"reason","quantity":0,"endDate":"2000-01-23T04:56:07.000+00:00","rate":6.027456183070403,"startDate":"2000-01-23T04:56:07.000+00:00"}],"adjustOverallDiscount":"{}","adjustOverallMinimumSpend":"{}","billableDimensionDetails":[{"discountExpression":"discountExpression","amount":2.3021358869347655,"quantity":9.301444243932576,"minimumCommit":7.061401241503109,"name":"name","discount":"{}","details":[{"feeExpressions":"feeExpressions","descriptions":"descriptions"},{"feeExpressions":"feeExpressions","descriptions":"descriptions"}],"billableMetricKey":"{}","category":"{}","isTrial":true,"minimumCommitScope":"{}"},{"discountExpression":"discountExpression","amount":2.3021358869347655,"quantity":9.301444243932576,"minimumCommit":7.061401241503109,"name":"name","discount":"{}","details":[{"feeExpressions":"feeExpressions","descriptions":"descriptions"},{"feeExpressions":"feeExpressions","descriptions":"descriptions"}],"billableMetricKey":"{}","category":"{}","isTrial":true,"minimumCommitScope":"{}"}],"paymentInstallmentsDetail":{"amount":1.0246457001441578,"description":"description","chargeOn":"2000-01-23T04:56:07.000+00:00"},"usageDailyRevenues":[{"date":"date","uniquePropertyItems":{"key":""},"quantity":6.84685269835264,"billableMetricKey":{"groupBysExpression":"groupBysExpression","id":"id"}},{"date":"date","uniquePropertyItems":{"key":""},"quantity":6.84685269835264,"billableMetricKey":{"groupBysExpression":"groupBysExpression","id":"id"}}],"currency":"currency","adjustMinimumSpendByDimensions":[{"minimumSpend":5.962133916683182,"reason":"reason","dimensionKey":"dimensionKey"},{"minimumSpend":5.962133916683182,"reason":"reason","dimensionKey":"dimensionKey"}],"issueDate":"2000-01-23T04:56:07.000+00:00","receiptUrl":"receiptUrl","spaUrl":"spaUrl"},
                invoice_url = '',
                last_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                organization_id = '',
                payment_status = 'PENDING',
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'DRAFT',
                type = 'COMMIT'
            )
        else:
            return BillingInvoice(
        )
        """

    def testBillingInvoice(self):
        """Test BillingInvoice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
