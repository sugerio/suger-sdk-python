# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.offer_info import OfferInfo

class TestOfferInfo(unittest.TestCase):
    """OfferInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OfferInfo:
        """Test OfferInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OfferInfo`
        """
        model = OfferInfo()
        if include_optional:
            return OfferInfo(
                additional_eula_urls = [
                    ''
                    ],
                additional_reseller_eula_urls = [
                    ''
                    ],
                attach_eula_type = '',
                auto_renew = True,
                aws_agreement_duration = '',
                aws_channel_partner = suger_sdk_python.models.aws_channel_partner.AwsChannelPartner(
                    id = '', 
                    name = '', ),
                aws_cppo_event_detail = suger_sdk_python.models.aws_marketplace_event_bridge_event_detail.AwsMarketplaceEventBridgeEventDetail(
                    catalog = '', 
                    event_category = '', 
                    event_id = '', 
                    event_name = '', 
                    event_source = '', 
                    event_type = '', 
                    event_version = '', 
                    management_event = True, 
                    manufacturer = suger_sdk_python.models.manufacturer.manufacturer(), 
                    offer = suger_sdk_python.models.aws_marketplace_event_bridge_event_offer.AwsMarketplaceEventBridgeEventOffer(
                        arn = '', 
                        expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        id = '', 
                        name = '', ), 
                    product = suger_sdk_python.models.aws_marketplace_event_bridge_event_product.AwsMarketplaceEventBridgeEventProduct(
                        arn = '', 
                        id = '', 
                        title = '', ), 
                    request_id = '', 
                    request_parameters = suger_sdk_python.models.request_parameters.requestParameters(), 
                    response_elements = suger_sdk_python.models.response_elements.responseElements(), 
                    seller_of_record = suger_sdk_python.models.seller_of_record.sellerOfRecord(), 
                    targeted_buyer_account_ids = [
                        ''
                        ], ),
                aws_cppo_opportunity = suger_sdk_python.models.aws_marketplace_cppo_opportunity.AwsMarketplaceCppoOpportunity(
                    created_date = '', 
                    description = '', 
                    dimensions = [
                        {"Types":["Types","Types"],"Description":"Description","Length":3,"Rate":6.965117697638846,"TimeUnit":"DAY","Unit":"Unit","Key":"Key","Name":"Name"}
                        ], 
                    manufacturer_account_id = '', 
                    manufacturer_legal_name = '', 
                    name = '', 
                    offer_details = suger_sdk_python.models.aws_marketplace_cppo_opportunity_offer_details.AwsMarketplaceCppoOpportunityOfferDetails(
                        offer_created_count = 56, 
                        offer_extended_status = '', ), 
                    pre_existing_buyer_agreement = suger_sdk_python.models.aws_marketplace_pre_existing_agreement.AwsMarketplacePreExistingAgreement(
                        acquisition_channel = suger_sdk_python.models.acquisition_channel.AcquisitionChannel(), 
                        pricing_model = suger_sdk_python.models.pricing_model.PricingModel(), ), 
                    product_id = '', 
                    product_name = '', 
                    rules = [
                        suger_sdk_python.models.aws_marketplace_cppo_opportunity_rule.AwsMarketplaceCppoOpportunityRule(
                            availability_end_date = '', 
                            id = '', 
                            negative_targeting = suger_sdk_python.models.negative_targeting.NegativeTargeting(), 
                            offers_max_quantity = 56, 
                            positive_targeting = suger_sdk_python.models.positive_targeting.PositiveTargeting(), 
                            reseller_account_id = '', 
                            reseller_legal_name = '', 
                            type = 'AvailabilityRule', 
                            usage = '', )
                        ], 
                    status = 'Active', 
                    terms = [
                        suger_sdk_python.models.aws_marketplace_cppo_opportunity_term.AwsMarketplaceCppoOpportunityTerm(
                            currency_code = '', 
                            documents = [
                                suger_sdk_python.models.aws_marketplace_catalog_legal_term_document.AwsMarketplaceCatalogLegalTermDocument(
                                    url = '', 
                                    version = '', )
                                ], 
                            duration = '', 
                            grants = [
                                suger_sdk_python.models.aws_marketplace_cppo_opportunity_upfront_price_grant.AwsMarketplaceCppoOpportunityUpfrontPriceGrant(
                                    dimension_key = '', 
                                    max_quantity = 56, )
                                ], 
                            id = '', 
                            maximum_agreement_start_date = '', 
                            positive_targeting = suger_sdk_python.models.aws_marketplace_cppo_opportunity_positive_targeting.AwsMarketplaceCppoOpportunityPositiveTargeting(
                                buyer_accounts = [
                                    suger_sdk_python.models.aws_marketplace_buyer_account.AwsMarketplaceBuyerAccount(
                                        aws_account_id = '', )
                                    ], 
                                country_codes = [
                                    ''
                                    ], ), 
                            price = '', 
                            rate_cards = [
                                suger_sdk_python.models.aws_marketplace_catalog_pricing_term_rate_card.AwsMarketplaceCatalogPricingTermRateCard(
                                    constraints = suger_sdk_python.models.constraints.Constraints(), 
                                    rate_card = [
                                        suger_sdk_python.models.aws_marketplace_catalog_pricing_term_rate_card_item.AwsMarketplaceCatalogPricingTermRateCardItem(
                                            description = '', 
                                            dimension_key = '', 
                                            display_name = '', 
                                            price = '', 
                                            quantity = '', 
                                            unit = '', )
                                        ], 
                                    selector = suger_sdk_python.models.selector.Selector(), )
                                ], 
                            schedule = [
                                suger_sdk_python.models.aws_marketplace_cppo_opportunity_payment_schedule.AwsMarketplaceCppoOpportunityPaymentSchedule(
                                    charge_amount = '', 
                                    charge_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], )
                        ], 
                    discount_type = suger_sdk_python.models.discount_type.discountType(), 
                    opportunity_duration_type = 'SPECIFIC_DATES', 
                    opportunity_id = '', 
                    partner_id = '', ),
                aws_markup_percentage = 1.337,
                aws_resale_authorization_id = '',
                azure_original_plan = {"lifecycleState":"notAvailable","product":"product","softwareReservation":{"paymentSchedule":{"type":"day","value":7.386281948385884},"reservationDuration":{"type":"day","value":7.386281948385884},"vmPrices":{"patternProperties":{"key":{"quantity":7.457744773683766,"unitPricePerPaymentPeriodInUsd":1.1730742509559433}}}},"$schema":"$schema","offerPricingType":"{}","visibility":"visible","planName":"planName","resourceName":"resourceName","id":"id","validations":[{"resourceId":"resourceId","code":"businessValidationError","$schema":"$schema","level":"informational","message":"message"},{"resourceId":"resourceId","code":"businessValidationError","$schema":"$schema","level":"informational","message":"message"}],"plan":"plan","pricing":{"customMeters":{"priceInputOption":"perMarket","meters":"{}"},"recurrentPrice":{"recurrentPriceMode":"flatRate","userLimits":{"min":6.84685269835264,"max":1.4894159098541704},"priceInputOption":"perMarket","prices":[{"pricePerPaymentInUsd":1.2315135367772556,"billingTerm":{"type":"day","value":7.386281948385884},"paymentOption":{"type":"day","value":7.386281948385884},"prices":[{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"},{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"}]},{"pricePerPaymentInUsd":1.2315135367772556,"billingTerm":{"type":"day","value":7.386281948385884},"paymentOption":{"type":"day","value":7.386281948385884},"prices":[{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"},{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"}]}]}}},
                azure_private_offer = suger_sdk_python.models.azure_marketplace_private_offer.AzureMarketplacePrivateOffer(
                    __schema = '', 
                    accept_by = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    acceptance_links = [
                        suger_sdk_python.models.azure_marketplace_private_offer_acceptance_link.AzureMarketplacePrivateOfferAcceptanceLink(
                            beneficiary_id = '', 
                            link = '', )
                        ], 
                    beneficiaries = [
                        suger_sdk_python.models.azure_marketplace_private_offer_beneficiary.AzureMarketplacePrivateOfferBeneficiary(
                            beneficiary_recipients = [
                                suger_sdk_python.models.azure_marketplace_private_offer_beneficiary_recipient.AzureMarketplacePrivateOfferBeneficiaryRecipient(
                                    id = '', 
                                    recipient_type = 'cspCustomer', )
                                ], 
                            description = '', 
                            id = '', )
                        ], 
                    e_tag = '', 
                    end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    id = '', 
                    last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '', 
                    notification_contacts = [
                        ''
                        ], 
                    offer_pricing_type = '', 
                    partners = [
                        suger_sdk_python.models.azure_marketplace_private_offer_partner.AzureMarketplacePrivateOfferPartner(
                            id = '', 
                            location = '', 
                            partner_name = '', )
                        ], 
                    prepared_by = '', 
                    pricing = [
                        suger_sdk_python.models.azure_marketplace_private_offer_pricing.AzureMarketplacePrivateOfferPricing(
                            base_plan = '', 
                            discount_percentage = 1.337, 
                            discount_type = 'absolute', 
                            markup_percentage = 1.337, 
                            new_plan_details = suger_sdk_python.models.new_plan_details.newPlanDetails(), 
                            original_plan = suger_sdk_python.models.original_plan.originalPlan(), 
                            plan = '', 
                            plan_id = '', 
                            plan_name = '', 
                            plan_type = 'FLAT_RATE', 
                            price_details = suger_sdk_python.models.price_details.priceDetails(), 
                            private_offer_plan = suger_sdk_python.models.private_offer_plan.privateOfferPlan(), 
                            product = '', 
                            product_name = '', 
                            suger_offer_id = '', )
                        ], 
                    private_offer_type = '', 
                    resource_name = '', 
                    start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    state = 'draft', 
                    sub_state = suger_sdk_python.models.sub_state.subState(), 
                    terms_and_conditions_doc_sas_url = '', 
                    terms_and_conditions_docs = [
                        suger_sdk_python.models.azure_marketplace_private_offer_terms_doc.AzureMarketplacePrivateOfferTermsDoc(
                            customer_facing_document_name = '', 
                            file_name = '', 
                            sas_url = '', )
                        ], 
                    upgraded_from = suger_sdk_python.models.azure_marketplace_private_offer_promotion_reference.AzureMarketplacePrivateOfferPromotionReference(
                        id = '', 
                        name = '', ), 
                    validations = [
                        {"resourceId":"resourceId","code":"businessValidationError","$schema":"$schema","level":"informational","message":"message"}
                        ], 
                    variable_start_date = True, ),
                azure_product_variant = {"conversionPaths":"conversionPaths","leadGenID":"leadGenID","extendedProperties":[{"type":"type","value":"value"},{"type":"type","value":"value"}],"cloudAvailabilities":["cloudAvailabilities","cloudAvailabilities"],"azureGovernmentCertifications":[{"validationResults":[{"errorMessage":"errorMessage","memberNames":["memberNames","memberNames"]},{"errorMessage":"errorMessage","memberNames":["memberNames","memberNames"]}],"title":"title","uri":"uri"},{"validationResults":[{"errorMessage":"errorMessage","memberNames":["memberNames","memberNames"]},{"errorMessage":"errorMessage","memberNames":["memberNames","memberNames"]}],"title":"title","uri":"uri"}],"externalID":"externalID","referenceVariantID":"referenceVariantID","id":"id","state":"InActive","featureAvailabilities":[{"markets":[{"marketCode":"marketCode","friendlyName":"friendlyName"},{"marketCode":"marketCode","friendlyName":"friendlyName"}],"visibility":"Public","priceSchedules":[{"isBaseSchedule":true,"schedules":[{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}},{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}}],"dateTimeRange":{"endAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true},"startAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true}},"marketCodes":["marketCodes","marketCodes"],"friendlyName":"friendlyName"},{"isBaseSchedule":true,"schedules":[{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}},{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}}],"dateTimeRange":{"endAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true},"startAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true}},"marketCodes":["marketCodes","marketCodes"],"friendlyName":"friendlyName"}],"customMeters":[{"unitOfMeasure":"unitOfMeasure","displayName":"displayName","includedBaseQuantities":[{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"},{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"}],"isEnabled":true,"priceInUsd":5.025004791520295,"id":"id","uniqueID":"uniqueID"},{"unitOfMeasure":"unitOfMeasure","displayName":"displayName","includedBaseQuantities":[{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"},{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"}],"isEnabled":true,"priceInUsd":5.025004791520295,"id":"id","uniqueID":"uniqueID"}],"marketStates":[{"marketCode":"marketCode","state":"Disabled"},{"marketCode":"marketCode","state":"Disabled"}],"tenantAudiences":[{"description":"description","id":"id"},{"description":"description","id":"id"}],"subscriptionAudiences":[{"description":"description","id":"id"},{"description":"description","id":"id"}],"id":"id","properties":[{"type":"type","value":"value"},{"type":"type","value":"value"}],"trial":{"duration":9,"dateTimeRange":{"endAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true},"startAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true}},"type":"NoTrial","durationType":"Minute"},"isHidden":true,"resourceType":"resourceType"},{"markets":[{"marketCode":"marketCode","friendlyName":"friendlyName"},{"marketCode":"marketCode","friendlyName":"friendlyName"}],"visibility":"Public","priceSchedules":[{"isBaseSchedule":true,"schedules":[{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}},{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}}],"dateTimeRange":{"endAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true},"startAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true}},"marketCodes":["marketCodes","marketCodes"],"friendlyName":"friendlyName"},{"isBaseSchedule":true,"schedules":[{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}},{"pricingModel":"Flat","pricingUnits":[{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true},{"unitType":"unitType","name":"sharedcore","lowerUnit":9,"upperUnit":6,"isUnlimitedUnit":true}],"priceCadence":{"type":"Month","value":9},"retailPrice":{"openPrice":8.762042012749001,"priceTierID":"priceTierID","currencyCode":"currencyCode"}}],"dateTimeRange":{"endAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true},"startAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true}},"marketCodes":["marketCodes","marketCodes"],"friendlyName":"friendlyName"}],"customMeters":[{"unitOfMeasure":"unitOfMeasure","displayName":"displayName","includedBaseQuantities":[{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"},{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"}],"isEnabled":true,"priceInUsd":5.025004791520295,"id":"id","uniqueID":"uniqueID"},{"unitOfMeasure":"unitOfMeasure","displayName":"displayName","includedBaseQuantities":[{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"},{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"}],"isEnabled":true,"priceInUsd":5.025004791520295,"id":"id","uniqueID":"uniqueID"}],"marketStates":[{"marketCode":"marketCode","state":"Disabled"},{"marketCode":"marketCode","state":"Disabled"}],"tenantAudiences":[{"description":"description","id":"id"},{"description":"description","id":"id"}],"subscriptionAudiences":[{"description":"description","id":"id"},{"description":"description","id":"id"}],"id":"id","properties":[{"type":"type","value":"value"},{"type":"type","value":"value"}],"trial":{"duration":9,"dateTimeRange":{"endAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true},"startAt":{"dateTimeInUtc":"dateTimeInUtc","localizePerMarket":true}},"type":"NoTrial","durationType":"Minute"},"isHidden":true,"resourceType":"resourceType"}],"friendlyName":"friendlyName","resourceType":"AzureSkuVariant"},
                billable_dimensions = [
                    {"priceModelTiered":"{}","priceModelTieredPercentage":"{}","priceModelMatrix":"{}","minimumCommit":1.4658129805029452,"length":6,"priceModelBulk":"{}","description":"description","discount":"{}","minimumCommitScope":"{}","minimumCommitProrata":true,"billableMetricId":"billableMetricId","priceModelPercentage":"{}","name":"name","priceModelBasic":"{}","category":"{}","priceModelVolume":"{}","timeUnit":"{}"}
                    ],
                billing_cycle = 'MONTH_FIRST_DAY',
                buyer_aws_account_ids = [
                    ''
                    ],
                buyer_azure_tenants = [
                    {"description":"description","id":"id"}
                    ],
                commit_amount = 1.337,
                commit_billing_interval_in_months = 56,
                commits = [
                    {"types":["types","types"],"quantity":3,"length":2,"description":"description","type":"{}","maximumUsers":706140,"rate":2.027123023002322,"isUserCreated":true,"minimumUsers":930144,"name":"name","term":"term","category":"category","termEndTime":"termEndTime","key":"key","timeUnit":"{}"}
                    ],
                currency = '',
                dimensions = [
                    {"priceTiers":[{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884},{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}],"types":["types","types"],"description":"description","planName":"planName","usageCount":"{}","rate":1.0246457001441578,"includedBaseQuantities":[{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"},{"quantity":4.145608029883936,"isInfinite":true,"recurringUnit":"Monthly"}],"valueType":"{}","name":"name","planId":"planId","category":"category","key":"key","skuId":"skuId"}
                    ],
                discount_percentage = 1.337,
                eula_type = '',
                eula_url = '',
                gcp_customer_info = suger_sdk_python.models.gcp_marketplace_private_offer_customer_info.GcpMarketplacePrivateOfferCustomerInfo(
                    address = '', 
                    contact = '', 
                    email = '', 
                    organization = '', 
                    unverified_billing_account = '', ),
                gcp_duration = 56,
                gcp_metrics = [
                    {"priceTiers":[{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884},{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}],"displayUnitDescription":"displayUnitDescription","unit":"unit","metricKind":"metricKind","displayName":"displayName","valueType":"{}","name":"name","description":"description","displayUnit":"displayUnit","id":"id","reportingUnit":"reportingUnit","skuId":"skuId"}
                    ],
                gcp_payment_schedule = '',
                gcp_plans = [
                    {"priceInfo":{"usageFees":[{"priceTiers":[{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884},{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}],"metricId":"metricId","displayQuantity":7},{"priceTiers":[{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884},{"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}],"metricId":"metricId","displayQuantity":7}],"subscriptionPlans":[{"period":"period","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"}},{"period":"period","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"}}],"description":"description","priceModel":"FREE"},"purchaseMode":"PURCHASE_MODE_PRIVATE","name":"name","title":"title","featureValues":[{"featureValue":"featureValue","featureTitle":"featureTitle","featureName":"featureName","featureDescription":"featureDescription"},{"featureValue":"featureValue","featureTitle":"featureTitle","featureName":"featureName","featureDescription":"featureDescription"}]}
                    ],
                gcp_private_offer = suger_sdk_python.models.gcp_marketplace_private_offer.GcpMarketplacePrivateOffer(
                    active_entitlement = {"newPendingOffer":"newPendingOffer","offerEffectiveTime":"2000-01-23T04:56:07.000+00:00","newPlan":"newPlan","offer":"offer","inputProperties":[9,9],"provider":"provider","offerEndTime":"2000-01-23T04:56:07.000+00:00","offerDuration":"offerDuration","consumers":[{"project":"project"},{"project":"project"}],"newOfferEndTime":"newOfferEndTime","subscriptionEndTime":"2000-01-23T04:56:07.000+00:00","id":"id","state":"{}","usageReportingId":"usageReportingId","plan":"plan","messageToUser":"messageToUser","product":"product","updateTime":"2000-01-23T04:56:07.000+00:00","newOfferDuration":"newOfferDuration","quoteExternalName":"quoteExternalName","createTime":"2000-01-23T04:56:07.000+00:00","newPendingPlan":"newPendingPlan","name":"name","newPendingOfferDuration":"newPendingOfferDuration","account":"account","productExternalName":"productExternalName","newOfferStartTime":"newOfferStartTime"}, 
                    agency_enabled = True, 
                    agreement = '', 
                    cancel_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    custom_eula = {"documentBody":"documentBody","documentType":"documentType","unstructuredDocument":{"content":"content"},"name":"name","description":"description","updateTime":"2000-01-23T04:56:07.000+00:00","externalGoogleLink":"{}"}, 
                    customer_info = suger_sdk_python.models.gcp_marketplace_private_offer_customer_info.GcpMarketplacePrivateOfferCustomerInfo(
                        address = '', 
                        contact = '', 
                        email = '', 
                        organization = '', 
                        unverified_billing_account = '', ), 
                    eula_agreement_document = {"documentBody":"documentBody","documentType":"documentType","unstructuredDocument":{"content":"content"},"name":"name","description":"description","updateTime":"2000-01-23T04:56:07.000+00:00","externalGoogleLink":"{}"}, 
                    existing_offer_data = suger_sdk_python.models.gcp_marketplace_existing_offer_data.GcpMarketplaceExistingOfferData(
                        entitlement = {"newPendingOffer":"newPendingOffer","offerEffectiveTime":"2000-01-23T04:56:07.000+00:00","newPlan":"newPlan","offer":"offer","inputProperties":[9,9],"provider":"provider","offerEndTime":"2000-01-23T04:56:07.000+00:00","offerDuration":"offerDuration","consumers":[{"project":"project"},{"project":"project"}],"newOfferEndTime":"newOfferEndTime","subscriptionEndTime":"2000-01-23T04:56:07.000+00:00","id":"id","state":"{}","usageReportingId":"usageReportingId","plan":"plan","messageToUser":"messageToUser","product":"product","updateTime":"2000-01-23T04:56:07.000+00:00","newOfferDuration":"newOfferDuration","quoteExternalName":"quoteExternalName","createTime":"2000-01-23T04:56:07.000+00:00","newPendingPlan":"newPendingPlan","name":"name","newPendingOfferDuration":"newPendingOfferDuration","account":"account","productExternalName":"productExternalName","newOfferStartTime":"newOfferStartTime"}, 
                        existing_price_model_type = '', 
                        has_entitlement_changed = True, 
                        private_offer = suger_sdk_python.models.gcp_marketplace_existing_private_offer.GcpMarketplaceExistingPrivateOffer(
                            agreement = '', 
                            installment_timeline = suger_sdk_python.models.gcp_marketplace_private_offer_installment_timeline.GcpMarketplacePrivateOfferInstallmentTimeline(
                                installments = [
                                    suger_sdk_python.models.gcp_marketplace_private_offer_installment.GcpMarketplacePrivateOfferInstallment(
                                        price_model = suger_sdk_python.models.gcp_marketplace_private_offer_price_model.GcpMarketplacePrivateOfferPriceModel(
                                            base_offer = '', 
                                            commitment = suger_sdk_python.models.gcp_marketplace_private_offer_price_model_commitment.GcpMarketplacePrivateOfferPriceModelCommitment(
                                                commitment_amount_per_period = {"nanos":1,"units":"units","currencyCode":"currencyCode"}, 
                                                discount = suger_sdk_python.models.gcp_marketplace_private_offer_price_model_discount.GcpMarketplacePrivateOfferPriceModelDiscount(
                                                    discount_percentage = suger_sdk_python.models.discount_percentage.discountPercentage(), 
                                                    discounted_price = suger_sdk_python.models.discounted_price.discountedPrice(), ), 
                                                period = {"unit":"MONTHLY_PERIOD","count":4}, ), 
                                            fixed_price = suger_sdk_python.models.gcp_marketplace_private_offer_price_model_fixed.GcpMarketplacePrivateOfferPriceModelFixed(), 
                                            one_time_credit = suger_sdk_python.models.one_time_credit.oneTimeCredit(), 
                                            overage = suger_sdk_python.models.gcp_marketplace_private_offer_price_model_overage.GcpMarketplacePrivateOfferPriceModelOverage(
                                                sku_discounts = [
                                                    None
                                                    ], ), 
                                            payg = suger_sdk_python.models.payg.payg(), 
                                            previous_credit_balance_policy = '', ), 
                                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], ), 
                            name = '', 
                            offer_term = suger_sdk_python.models.gcp_marketplace_private_offer_term.GcpMarketplacePrivateOfferTerm(
                                enable_scheduled_start_times = True, 
                                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                start_policy = '', 
                                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                term_duration = {"unit":"MONTHLY_PERIOD","count":4}, ), 
                            payment_schedule = '', 
                            price_model = suger_sdk_python.models.price_model.priceModel(), 
                            service_level = '', ), 
                        standard_offer = suger_sdk_python.models.standard_offer.standardOffer(), ), 
                    expire_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    features = [
                        {"featureValue":"featureValue","featureTitle":"featureTitle","featureName":"featureName","featureDescription":"featureDescription"}
                        ], 
                    installment_timeline = suger_sdk_python.models.gcp_marketplace_private_offer_installment_timeline.GcpMarketplacePrivateOfferInstallmentTimeline(), 
                    lifecycle_state = '', 
                    metric_information = suger_sdk_python.models.gcp_marketplace_private_offer_metric_information.GcpMarketplacePrivateOfferMetricInformation(
                        metric_details = [
                            suger_sdk_python.models.gcp_marketplace_private_offer_metric_detail.GcpMarketplacePrivateOfferMetricDetail(
                                display_name = '', 
                                parent_commerce_service = '', 
                                sku_id = '', 
                                tiers = [
                                    {"startingUsageAmount":"startingUsageAmount","price":{"nanos":1,"units":"units","currencyCode":"currencyCode"},"fromAmount":7.386281948385884}
                                    ], 
                                unit_description = '', )
                            ], ), 
                    migration_metadata = suger_sdk_python.models.gcp_marketplace_private_offer_migration_metadata.GcpMarketplacePrivateOfferMigrationMetadata(
                        inventory_flavor_external_name = '', 
                        product_external_name = '', 
                        project_number = '', 
                        provider_id = '', ), 
                    name = '', 
                    offer_id = '', 
                    offer_source = 'OFFER', 
                    offer_state = 'OFFER_ACTIVE', 
                    offer_term = suger_sdk_python.models.gcp_marketplace_private_offer_term.GcpMarketplacePrivateOfferTerm(
                        enable_scheduled_start_times = True, 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    offer_title = '', 
                    offer_title_auto_generated = True, 
                    payment_schedule = suger_sdk_python.models.payment_schedule.paymentSchedule(), 
                    policies = {
                        'key' : ''
                        }, 
                    price_model = suger_sdk_python.models.price_model.priceModel(), 
                    price_model_type = '', 
                    provider_cancellation_internal_note = '', 
                    provider_info = suger_sdk_python.models.gcp_marketplace_private_offer_provider_info.GcpMarketplacePrivateOfferProviderInfo(
                        creator_email_address = '', 
                        sales_contact_email = '', 
                        sales_contact_name = '', ), 
                    provider_internal_note = '', 
                    provider_public_note = '', 
                    purchase_channel = suger_sdk_python.models.gcp_marketplace_purchase_channel.GcpMarketplacePurchaseChannel(
                        marketplace = True, 
                        reseller = True, ), 
                    purchase_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    replacement_metadata = suger_sdk_python.models.gcp_marketplace_private_offer_replacement_metadata.GcpMarketplacePrivateOfferReplacementMetadata(
                        coterm_alignment = '', 
                        replaced_offer = '', 
                        replaced_offer_end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        replacement_policy = '', ), 
                    reseller_info = suger_sdk_python.models.reseller_info.resellerInfo(), 
                    service_level = '', 
                    update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    use_legacy_partner_eula = True, 
                    user_labels = [
                        ''
                        ], ),
                gcp_provider_info = suger_sdk_python.models.gcp_marketplace_private_offer_provider_info.GcpMarketplacePrivateOfferProviderInfo(
                    creator_email_address = '', 
                    sales_contact_email = '', 
                    sales_contact_name = '', ),
                gcp_provider_internal_note = '',
                gcp_provider_public_note = '',
                gcp_reseller_private_offer_plan = {"offerTemplatePolicies":{"allowScheduledStartDate":true,"allowAutoRenewal":true,"maxRenewalTimes":"maxRenewalTimes","proration":"PRORATION_UNSPECIFIED"},"displayName":"displayName","agreementDocuments":{"isvToCustomerAgreementDocument":{"documentBody":"documentBody","documentType":"documentType","unstructuredDocument":{"content":"content"},"name":"name","description":"description","updateTime":"2000-01-23T04:56:07.000+00:00","externalGoogleLink":"{}"},"isvToResellerAgreementDocument":{"documentBody":"documentBody","documentType":"documentType","unstructuredDocument":{"content":"content"},"name":"name","description":"description","updateTime":"2000-01-23T04:56:07.000+00:00","externalGoogleLink":"{}"}},"features":[{"featureValue":"featureValue","featureTitle":"featureTitle","featureName":"featureName","featureDescription":"featureDescription"},{"featureValue":"featureValue","featureTitle":"featureTitle","featureName":"featureName","featureDescription":"featureDescription"}],"isvInfo":{"contactEmail":"contactEmail","contactName":"contactName","partnerAdvantageAccountLegalName":"partnerAdvantageAccountLegalName","partnerAdvantageId":"partnerAdvantageId"},"paymentSchedule":"","installmentTimelineTemplate":{"installmentTemplates":[{"priceModelTemplate":{"baseOffer":"baseOffer","commitment":{"commitmentAmountPerPeriodTemplate":{"decimalAmountConstraint":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"currencyCode":"currencyCode"},"period":{"unit":"MONTHLY_PERIOD","count":4},"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}}},"consumption":"overage","payg":{"period":{"unit":"MONTHLY_PERIOD","count":4},"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}},"skuDiscountTemplates":["{}","{}"],"skuRepresentation":{"skuList":{"skus":["skus","skus"]},"skus":"skus","skuGroupList":"{}"}},"subscription":"fixedPrice","fixedPrice":{"period":{"unit":"MONTHLY_PERIOD","count":4},"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}}},"overage":{"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}},"skuDiscountTemplates":["{}","{}"],"skuRepresentation":{"skuList":{"skus":["skus","skus"]},"skus":"skus","skuGroupList":"{}"}}},"startTime":"2000-01-23T04:56:07.000+00:00"},{"priceModelTemplate":{"baseOffer":"baseOffer","commitment":{"commitmentAmountPerPeriodTemplate":{"decimalAmountConstraint":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"currencyCode":"currencyCode"},"period":{"unit":"MONTHLY_PERIOD","count":4},"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}}},"consumption":"overage","payg":{"period":{"unit":"MONTHLY_PERIOD","count":4},"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}},"skuDiscountTemplates":["{}","{}"],"skuRepresentation":{"skuList":{"skus":["skus","skus"]},"skus":"skus","skuGroupList":"{}"}},"subscription":"fixedPrice","fixedPrice":{"period":{"unit":"MONTHLY_PERIOD","count":4},"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}}},"overage":{"discountTemplate":{"discountPercentage":{"minAmount":{"nanos":1,"units":"units"},"defaultAmount":{"nanos":1,"units":"units"},"maxAmount":{"nanos":1,"units":"units"}},"discountEconomics":"discountEconomics","hideDiscountPercentage":true,"discountedPrice":{"nanos":1,"units":"units","currencyCode":"currencyCode"}},"skuDiscountTemplates":["{}","{}"],"skuRepresentation":{"skuList":{"skus":["skus","skus"]},"skus":"skus","skuGroupList":"{}"}}},"startTime":"2000-01-23T04:56:07.000+00:00"}]},"state":{"cancellationReason":"{}","stateType":"","comment":"comment","rejectionReason":"{}"},"stateTransitions":[{"transitionTime":"2000-01-23T04:56:07.000+00:00","newState":{"stateType":null}},{"transitionTime":"2000-01-23T04:56:07.000+00:00","newState":{"stateType":null}}],"reusePolicy":"","margin":{"marginPercentage":{"value":"value"}},"agreement":"agreement","durationConfig":{"startTime":"2000-01-23T04:56:07.000+00:00","endTime":"2000-01-23T04:56:07.000+00:00"},"priceModelTemplate":"{}","startPolicy":"","updateTime":"2000-01-23T04:56:07.000+00:00","productInfo":{"flavorExternalName":"flavorExternalName","providerId":"providerId","serviceLevel":"serviceLevel","serviceName":"serviceName","productExternalName":"productExternalName"},"metaInfo":{"gcpOrganizationId":"gcpOrganizationId","gcpProjectNumber":"gcpProjectNumber"},"resellerInfo":{"billingAccountOrgDisplayName":"billingAccountOrgDisplayName","notesToReseller":"notesToReseller","billingAccountId":"billingAccountId","billingAccountType":"billingAccountType","billingAccountNickname":"billingAccountNickname"},"name":"name","resellOfferTemplate":"resellOfferTemplate","replacementMetadata":"{}","acceptanceDeadlineTime":"2000-01-23T04:56:07.000+00:00","amendmentContext":"{}","offerTermTemplate":{"paymentRecurrence":"paymentRecurrence","termDurationConstraint":{"defaultDuration":{"unit":"MONTHLY_PERIOD","count":4}},"startPolicy":"","startTime":"2000-01-23T04:56:07.000+00:00","endTime":"2000-01-23T04:56:07.000+00:00","enableScheduledStartTimes":true,"termDuration":{"unit":"MONTHLY_PERIOD","count":4}}},
                gcp_usage_plan_price_model = '',
                grace_period_in_days = 56,
                net_terms_in_days = 56,
                payment_installments = [
                    {"discountPercentage":8.762042012749001,"amount":9.369310271410669,"originalAmount":9.018348186070783,"chargeOn":"2000-01-23T04:56:07.000+00:00","chargeOnStr":"chargeOnStr","credit":6.683562403749608}
                    ],
                payment_schedule = '',
                private_offer_url = '',
                prorated_billing = True,
                refund_cancellation_policy = '',
                reseller_attach_eula_type = '',
                reseller_eula_type = '',
                reseller_eula_url = '',
                seller_notes = '',
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tax_ids = [
                    ''
                    ],
                trial_config = suger_sdk_python.models.trial_config.TrialConfig(
                    trial_period = 56, 
                    trial_period_unit = 'DAY', ),
                usage_billing_interval_in_months = 56,
                visibility = 'PRIVATE'
            )
        else:
            return OfferInfo(
        )
        """

    def testOfferInfo(self):
        """Test OfferInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
