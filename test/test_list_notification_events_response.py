# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.list_notification_events_response import ListNotificationEventsResponse

class TestListNotificationEventsResponse(unittest.TestCase):
    """ListNotificationEventsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListNotificationEventsResponse:
        """Test ListNotificationEventsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListNotificationEventsResponse`
        """
        model = ListNotificationEventsResponse()
        if include_optional:
            return ListNotificationEventsResponse(
                next_offset = 56,
                notification_events = [
                    {"eventID":"eventID","customFields":{"key":""},"entityType":"","contactEmails":["contactEmails","contactEmails"],"entityID":"entityID","message":"message","priority":"{}","title":"title","contactIds":["contactIds","contactIds"],"organizationID":"organizationID","ccContactIds":["ccContactIds","ccContactIds"],"channels":["EMAIL","EMAIL"],"isActionItem":true,"partner":"{}","createdBy":"{}","entityStatus":"entityStatus","entityName":"entityName","eventStatus":"{}","action":"","requireAudit":true,"trackEvents":[{"contactId":"contactId","action":"OPEN_EMAIL","timestamp":"2000-01-23T04:56:07.000+00:00"},{"contactId":"contactId","action":"OPEN_EMAIL","timestamp":"2000-01-23T04:56:07.000+00:00"}],"info":"{}","lastUpdateTime":"2000-01-23T04:56:07.000+00:00","timestamp":"2000-01-23T04:56:07.000+00:00"}
                    ],
                total_count = 56
            )
        else:
            return ListNotificationEventsResponse(
        )
        """

    def testListNotificationEventsResponse(self):
        """Test ListNotificationEventsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
