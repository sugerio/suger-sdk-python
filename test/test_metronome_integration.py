# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.metronome_integration import (
    MetronomeIntegration,
)  # noqa: E501


class TestMetronomeIntegration(unittest.TestCase):
    """MetronomeIntegration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetronomeIntegration:
        """Test MetronomeIntegration
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `MetronomeIntegration`
        """
        model = MetronomeIntegration()  # noqa: E501
        if include_optional:
            return MetronomeIntegration(
                api_token = '',
                billable_metric_full_list = [
                    openapi_client.models.metronome_billable_metric.MetronomeBillableMetric(
                        group_by = [
                            ''
                            ], 
                        id = '', 
                        name = '', )
                    ],
                billable_metric_whitelist = [
                    openapi_client.models.metronome_billable_metric.MetronomeBillableMetric(
                        group_by = [
                            ''
                            ], 
                        id = '', 
                        name = '', )
                    ],
                enable_auto_report_usage = True,
                enable_billable_metric_whitelist = True,
                secret_key = ''
            )
        else:
            return MetronomeIntegration(
        )
        """

    def testMetronomeIntegration(self):
        """Test MetronomeIntegration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
