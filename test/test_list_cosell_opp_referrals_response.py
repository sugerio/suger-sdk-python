# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_cosell_opp_referrals_response import \
    ListCosellOppReferralsResponse  # noqa: E501


class TestListCosellOppReferralsResponse(unittest.TestCase):
    """ListCosellOppReferralsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListCosellOppReferralsResponse:
        """Test ListCosellOppReferralsResponse
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ListCosellOppReferralsResponse`
        """
        model = ListCosellOppReferralsResponse()  # noqa: E501
        if include_optional:
            return ListCosellOppReferralsResponse(
                cosell_opp_referrals = [
                    openapi_client.models.cosell_opp_referral.CosellOppReferral(
                        creation_time = '', 
                        destination = openapi_client.models.cosell_opp.CosellOpp(
                            id = '', 
                            info = openapi_client.models.cosell_opp_info.CosellOppInfo(
                                account = { }, 
                                contact = { }, 
                                creation_time = '', 
                                last_modified_time = '', 
                                microsoft_partner_referral = openapi_client.models.microsoft_partner_referral.MicrosoftPartnerReferral(
                                    accepted_date_time = '', 
                                    call_to_action = '', 
                                    campaign_id = '', 
                                    closed_date_time = '', 
                                    consent = openapi_client.models.microsoft_partner_referral_consent.MicrosoftPartnerReferralConsent(
                                        consent_to_contact = True, 
                                        consent_to_share_referral_with_microsoft_sellers = True, 
                                        consent_to_to_share_info_with_others = True, ), 
                                    created_date_time = '', 
                                    created_via = '', 
                                    customer_profile = openapi_client.models.microsoft_partner_referral_profile.MicrosoftPartnerReferralProfile(
                                        activities = openapi_client.models.activities.activities(), 
                                        address = openapi_client.models.microsoft_partner_referral_address.MicrosoftPartnerReferralAddress(
                                            address_line1 = '', 
                                            address_line2 = '', 
                                            city = '', 
                                            country = '', 
                                            postal_code = openapi_client.models.postal_code.postalCode(), 
                                            region = '', 
                                            state = '', ), 
                                        ids = [
                                            openapi_client.models.microsoft_partner_referral_profile_id.MicrosoftPartnerReferralProfileId(
                                                id = '', 
                                                profile_type = '', )
                                            ], 
                                        is_macc_eligible = True, 
                                        is_matching_complete = True, 
                                        name = '', 
                                        size = '', 
                                        team = [
                                            openapi_client.models.microsoft_partner_referral_person.MicrosoftPartnerReferralPerson(
                                                contact_preference = openapi_client.models.microsoft_partner_referral_contact_preference.MicrosoftPartnerReferralContactPreference(
                                                    disable_notifications = openapi_client.models.disable_notifications.disableNotifications(), 
                                                    locale = openapi_client.models.locale.locale(), ), 
                                                email = '', 
                                                email_validation_status = '', 
                                                first_name = '', 
                                                last_name = '', 
                                                linked_in_profile_url = '', 
                                                phone_number = '', 
                                                phone_validation_status = '', 
                                                title = '', )
                                            ], ), 
                                    deal_sensitivity = '', 
                                    details = openapi_client.models.microsoft_partner_referral_detail.MicrosoftPartnerReferralDetail(
                                        closing_date_time = '', 
                                        currency = '', 
                                        customer_action = openapi_client.models.customer_action.customerAction(), 
                                        customer_requested_contact = openapi_client.models.customer_requested_contact.customerRequestedContact(), 
                                        deal_value = 1.337, 
                                        incentive_level = openapi_client.models.incentive_level.incentiveLevel(), 
                                        notes = '', 
                                        requirements = openapi_client.models.microsoft_partner_referral_requirements.MicrosoftPartnerReferralRequirements(
                                            additional_requirements = openapi_client.models.microsoft_partner_referral_additional_requirements.MicrosoftPartnerReferralAdditionalRequirements(
                                                attributes = [
                                                    openapi_client.models.microsoft_partner_referral_requirement_attribute.MicrosoftPartnerReferralRequirementAttribute(
                                                        id = '', 
                                                        type = '', )
                                                    ], 
                                                iot = openapi_client.models.microsoft_partner_referral_iot.MicrosoftPartnerReferralIot(
                                                    attach_services = True, 
                                                    azure_certified_device = True, 
                                                    customer_license_agreement_number = openapi_client.models.customer_license_agreement_number.customerLicenseAgreementNumber(), 
                                                    device_category = openapi_client.models.device_category.deviceCategory(), 
                                                    silicon_type = openapi_client.models.silicon_type.siliconType(), ), ), 
                                            industries = [
                                                openapi_client.models.microsoft_partner_referral_tag.MicrosoftPartnerReferralTag(
                                                    id = '', )
                                                ], 
                                            offers = [
                                                openapi_client.models.microsoft_partner_referral_tag.MicrosoftPartnerReferralTag(
                                                    id = '', )
                                                ], 
                                            products = [
                                                
                                                ], 
                                            sales_plays = [
                                                
                                                ], 
                                            services = [
                                                
                                                ], 
                                            solutions = [
                                                openapi_client.models.microsoft_partner_referral_solution.MicrosoftPartnerReferralSolution(
                                                    closing_date_time = openapi_client.models.closing_date_time.closingDateTime(), 
                                                    currency = openapi_client.models.currency.currency(), 
                                                    id = '', 
                                                    name = '', 
                                                    price = openapi_client.models.price.price(), 
                                                    publisher_name = '', 
                                                    quantity = openapi_client.models.quantity.quantity(), 
                                                    solution_type = '', 
                                                    type = '', )
                                                ], ), ), 
                                    direction = '', 
                                    e_tag = '', 
                                    engagement_id = '', 
                                    exception = openapi_client.models.exception.exception(), 
                                    expiration_date_time = '', 
                                    favorite = True, 
                                    id = '', 
                                    invite_context = openapi_client.models.microsoft_partner_referral_invite_context.MicrosoftPartnerReferralInviteContext(
                                        assistance_request_code = '', 
                                        invited_by = openapi_client.models.microsoft_partner_referral_invited_info.MicrosoftPartnerReferralInvitedInfo(
                                            organization_id = '', 
                                            organization_name = '', ), 
                                        invited_mpn_id = '', 
                                        notes = openapi_client.models.notes.notes(), ), 
                                    is_auto_registration_enabled = True, 
                                    is_spam = True, 
                                    last_modified_via = '', 
                                    links = openapi_client.models.microsoft_partner_referral_link.MicrosoftPartnerReferralLink(
                                        related_referrals = openapi_client.models.microsoft_partner_referral_link_info.MicrosoftPartnerReferralLinkInfo(
                                            method = '', 
                                            uri = '', ), 
                                        self = openapi_client.models.microsoft_partner_referral_link_info.MicrosoftPartnerReferralLinkInfo(
                                            method = '', 
                                            uri = '', ), ), 
                                    mpn_id = '', 
                                    name = '', 
                                    organization_id = '', 
                                    organization_name = '', 
                                    qualification = '', 
                                    quality = '', 
                                    referral_program = openapi_client.models.referral_program.referralProgram(), 
                                    referral_source = openapi_client.models.referral_source.referralSource(), 
                                    registration_status = '', 
                                    registrations = [
                                        None
                                        ], 
                                    sales_stage = openapi_client.models.sales_stage.salesStage(), 
                                    status = '', 
                                    substatus = '', 
                                    tags = [
                                        None
                                        ], 
                                    target = [
                                        openapi_client.models.microsoft_partner_referral_target.MicrosoftPartnerReferralTarget(
                                            id = '', 
                                            type = '', )
                                        ], 
                                    team = [
                                        openapi_client.models.microsoft_partner_referral_person.MicrosoftPartnerReferralPerson(
                                            email = '', 
                                            email_validation_status = '', 
                                            first_name = '', 
                                            last_name = '', 
                                            linked_in_profile_url = '', 
                                            phone_number = '', 
                                            phone_validation_status = '', 
                                            title = '', )
                                        ], 
                                    tracking_info = openapi_client.models.microsoft_partner_referral_tracking_info.MicrosoftPartnerReferralTrackingInfo(
                                        microsoft_msx_id = openapi_client.models.microsoft_msx_id.microsoftMsxId(), 
                                        microsoft_us_fed_lead_id = openapi_client.models.microsoft_us_fed_lead_id.microsoftUSFedLeadId(), 
                                        microsoft_us_fedopportunity_id = openapi_client.models.microsoft_us_fedopportunity_id.microsoftUSFedopportunityId(), 
                                        migrated_psc_deal_id = openapi_client.models.migrated_psc_deal_id.migratedPSCDealId(), 
                                        migrated_psc_partner_deal_id = openapi_client.models.migrated_psc_partner_deal_id.migratedPSCPartnerDealId(), ), 
                                    type = '', 
                                    updated_date_time = '', ), 
                                opportunity = { }, 
                                owner = { }, ), 
                            partner = '', ), 
                        destination_id = '', 
                        destination_partner = '', 
                        id = '', 
                        last_update_time = '', 
                        meta_info = openapi_client.models.cosell_opp_meta.CosellOppMeta(
                            is_archived = True, 
                            is_draft = True, 
                            salesforce_referral_id = '', 
                            sync_record = openapi_client.models.cosell_sync_record.CosellSyncRecord(
                                message = '', 
                                ok = True, ), ), 
                        organization_id = '', 
                        source = openapi_client.models.cosell_opp.CosellOpp(
                            id = '', ), 
                        source_id = '', 
                        source_partner = '', )
                    ],
                next_offset = 56,
                total_count = 56
            )
        else:
            return ListCosellOppReferralsResponse(
        )
        """

    def testListCosellOppReferralsResponse(self):
        """Test ListCosellOppReferralsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
