# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.metering_usage_record_group_meta_info import MeteringUsageRecordGroupMetaInfo

class TestMeteringUsageRecordGroupMetaInfo(unittest.TestCase):
    """MeteringUsageRecordGroupMetaInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeteringUsageRecordGroupMetaInfo:
        """Test MeteringUsageRecordGroupMetaInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeteringUsageRecordGroupMetaInfo`
        """
        model = MeteringUsageRecordGroupMetaInfo()
        if include_optional:
            return MeteringUsageRecordGroupMetaInfo(
                skip_validation = True,
                billable_records = [
                    {"quantity":0.8008281904610115,"key":"key","properties":{"key":""}}
                    ],
                lago_amount = 1.337,
                lago_subscription_id = '',
                lago_usage_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                metronome_daily_cost_amount = 1.337,
                metronome_invoice_id = '',
                metronome_monthly_invoice_amount = 1.337,
                metronome_monthly_invoice_amount_adjusted = 1.337,
                origin_records = {
                    'key' : 1.337
                    },
                source = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return MeteringUsageRecordGroupMetaInfo(
        )
        """

    def testMeteringUsageRecordGroupMetaInfo(self):
        """Test MeteringUsageRecordGroupMetaInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
