# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.azure_marketplace_price_and_availability_private_offer_plan import AzureMarketplacePriceAndAvailabilityPrivateOfferPlan

class TestAzureMarketplacePriceAndAvailabilityPrivateOfferPlan(unittest.TestCase):
    """AzureMarketplacePriceAndAvailabilityPrivateOfferPlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureMarketplacePriceAndAvailabilityPrivateOfferPlan:
        """Test AzureMarketplacePriceAndAvailabilityPrivateOfferPlan
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureMarketplacePriceAndAvailabilityPrivateOfferPlan`
        """
        model = AzureMarketplacePriceAndAvailabilityPrivateOfferPlan()
        if include_optional:
            return AzureMarketplacePriceAndAvailabilityPrivateOfferPlan(
                var_schema = '',
                id = '',
                lifecycle_state = 'notAvailable',
                offer_pricing_type = '',
                plan = '',
                plan_name = '',
                pricing = {"customMeters":{"priceInputOption":"perMarket","meters":"{}"},"recurrentPrice":{"recurrentPriceMode":"flatRate","userLimits":{"min":6.84685269835264,"max":1.4894159098541704},"priceInputOption":"perMarket","prices":[{"pricePerPaymentInUsd":1.2315135367772556,"billingTerm":{"type":"day","value":7.386281948385884},"paymentOption":{"type":"day","value":7.386281948385884},"prices":[{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"},{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"}]},{"pricePerPaymentInUsd":1.2315135367772556,"billingTerm":{"type":"day","value":7.386281948385884},"paymentOption":{"type":"day","value":7.386281948385884},"prices":[{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"},{"markets":["markets","markets"],"price":1.0246457001441578,"currency":"currency"}]}]}},
                product = '',
                resource_name = '',
                software_reservation = {"paymentSchedule":{"type":"day","value":7.386281948385884},"reservationDuration":{"type":"day","value":7.386281948385884},"vmPrices":{"patternProperties":{"key":{"quantity":7.457744773683766,"unitPricePerPaymentPeriodInUsd":1.1730742509559433}}}},
                validations = [
                    {"resourceId":"resourceId","code":"businessValidationError","$schema":"$schema","level":"informational","message":"message"}
                    ],
                visibility = 'visible'
            )
        else:
            return AzureMarketplacePriceAndAvailabilityPrivateOfferPlan(
        )
        """

    def testAzureMarketplacePriceAndAvailabilityPrivateOfferPlan(self):
        """Test AzureMarketplacePriceAndAvailabilityPrivateOfferPlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
