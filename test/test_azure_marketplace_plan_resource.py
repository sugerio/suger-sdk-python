# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.azure_marketplace_plan_resource import AzureMarketplacePlanResource  # noqa: E501

class TestAzureMarketplacePlanResource(unittest.TestCase):
    """AzureMarketplacePlanResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureMarketplacePlanResource:
        """Test AzureMarketplacePlanResource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureMarketplacePlanResource`
        """
        model = AzureMarketplacePlanResource()  # noqa: E501
        if include_optional:
            return AzureMarketplacePlanResource(
                plan = openapi_client.models.azure_marketplace_plan.AzureMarketplacePlan(
                    __schema = '', 
                    alias = '', 
                    azure_government_certifications = [
                        openapi_client.models.azure_marketplace_government_certification.AzureMarketplaceGovernmentCertification(
                            link = '', 
                            name = '', )
                        ], 
                    azure_regions = [
                        ''
                        ], 
                    deprecation_schedule = openapi_client.models.azure_marketplace_deprecation_schedule.AzureMarketplaceDeprecationSchedule(
                        __schema = '', 
                        alternative = openapi_client.models.azure_marketplace_deprecation_schedule_alternative.AzureMarketplaceDeprecationScheduleAlternative(
                            plan = openapi_client.models.plan.plan(), 
                            product = openapi_client.models.product.product(), ), 
                        date = '', 
                        date_offset = '', 
                        reason = 'criticalSecurityIssue', ), 
                    display_rank = 56, 
                    id = '', 
                    identity = openapi_client.models.azure_marketplace_identity.AzureMarketplaceIdentity(
                        external_id = '', ), 
                    lifecycle_state = 'notAvailable', 
                    product = '', 
                    resource_name = '', 
                    subtype = 'managedApplication', 
                    validations = [
                        openapi_client.models.azure_marketplace_validation.AzureMarketplaceValidation(
                            __schema = '', 
                            code = 'businessValidationError', 
                            level = 'informational', 
                            message = '', 
                            resource_id = '', )
                        ], ),
                plan_listing = openapi_client.models.azure_marketplace_plan_listing.AzureMarketplacePlanListing(
                    __schema = '', 
                    description = '', 
                    id = '', 
                    kind = 'azureVM-plan', 
                    language_id = '', 
                    lifecycle_state = 'notAvailable', 
                    name = '', 
                    plan = '', 
                    product = '', 
                    resource_name = '', 
                    summary = '', 
                    validations = [
                        openapi_client.models.azure_marketplace_validation.AzureMarketplaceValidation(
                            __schema = '', 
                            code = 'businessValidationError', 
                            level = 'informational', 
                            message = '', 
                            resource_id = '', )
                        ], ),
                price_and_availability_plan = openapi_client.models.azure_marketplace_price_and_availability_plan.AzureMarketplacePriceAndAvailabilityPlan(
                    __schema = '', 
                    audience = 'public', 
                    billing_tag = '', 
                    customer_markets = 'customMarkets', 
                    id = '', 
                    markets = [
                        ''
                        ], 
                    plan = '', 
                    pricing = openapi_client.models.azure_marketplace_price_and_availability_price.AzureMarketplacePriceAndAvailabilityPrice(
                        core_pricing = openapi_client.models.azure_marketplace_price_and_availability_core_price.AzureMarketplacePriceAndAvailabilityCorePrice(
                            price = 1.337, 
                            price_input_option = 'free', 
                            price_per_core = 1.337, 
                            price_per_core_size = openapi_client.models.price_per_core_size.pricePerCoreSize(), 
                            prices = [
                                openapi_client.models.azure_marketplace_price.AzureMarketplacePrice(
                                    currency = '', 
                                    price = 1.337, )
                                ], ), 
                        license_model = '', ), 
                    private_audiences = [
                        openapi_client.models.azure_marketplace_price_and_availability_audience.AzureMarketplacePriceAndAvailabilityAudience(
                            id = '', 
                            label = '', 
                            type = 'none', )
                        ], 
                    product = '', 
                    resource_name = '', 
                    software_reservation = [
                        openapi_client.models.azure_marketplace_price_and_availability_software_reservation.AzureMarketplacePriceAndAvailabilitySoftwareReservation(
                            percentage_save = 1.337, 
                            term = 1.337, 
                            type = 'month', )
                        ], 
                    trial = openapi_client.models.azure_marketplace_term.AzureMarketplaceTerm(
                        type = 'day', 
                        value = 1.337, ), 
                    validations = [
                        openapi_client.models.azure_marketplace_validation.AzureMarketplaceValidation(
                            __schema = '', 
                            code = 'businessValidationError', 
                            level = 'informational', 
                            message = '', 
                            resource_id = '', )
                        ], 
                    visibility = 'visible', )
            )
        else:
            return AzureMarketplacePlanResource(
        )
        """

    def testAzureMarketplacePlanResource(self):
        """Test AzureMarketplacePlanResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
