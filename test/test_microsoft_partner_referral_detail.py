# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.microsoft_partner_referral_detail import MicrosoftPartnerReferralDetail  # noqa: E501

class TestMicrosoftPartnerReferralDetail(unittest.TestCase):
    """MicrosoftPartnerReferralDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MicrosoftPartnerReferralDetail:
        """Test MicrosoftPartnerReferralDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MicrosoftPartnerReferralDetail`
        """
        model = MicrosoftPartnerReferralDetail()  # noqa: E501
        if include_optional:
            return MicrosoftPartnerReferralDetail(
                closing_date_time = '',
                currency = '',
                customer_action = openapi_client.models.customer_action.customerAction(),
                customer_requested_contact = openapi_client.models.customer_requested_contact.customerRequestedContact(),
                deal_value = 1.337,
                incentive_level = openapi_client.models.incentive_level.incentiveLevel(),
                notes = '',
                requirements = openapi_client.models.microsoft_partner_referral_requirements.MicrosoftPartnerReferralRequirements(
                    additional_requirements = openapi_client.models.microsoft_partner_referral_additional_requirements.MicrosoftPartnerReferralAdditionalRequirements(
                        attributes = [
                            openapi_client.models.microsoft_partner_referral_requirement_attribute.MicrosoftPartnerReferralRequirementAttribute(
                                id = '', 
                                type = '', )
                            ], 
                        iot = openapi_client.models.microsoft_partner_referral_iot.MicrosoftPartnerReferralIot(
                            attach_services = True, 
                            azure_certified_device = True, 
                            customer_license_agreement_number = openapi_client.models.customer_license_agreement_number.customerLicenseAgreementNumber(), 
                            device_category = openapi_client.models.device_category.deviceCategory(), 
                            silicon_type = openapi_client.models.silicon_type.siliconType(), ), ), 
                    industries = [
                        openapi_client.models.microsoft_partner_referral_tag.MicrosoftPartnerReferralTag(
                            id = '', )
                        ], 
                    offers = [
                        openapi_client.models.microsoft_partner_referral_tag.MicrosoftPartnerReferralTag(
                            id = '', )
                        ], 
                    products = [
                        
                        ], 
                    sales_plays = [
                        
                        ], 
                    services = [
                        
                        ], 
                    solutions = [
                        openapi_client.models.microsoft_partner_referral_solution.MicrosoftPartnerReferralSolution(
                            closing_date_time = openapi_client.models.closing_date_time.closingDateTime(), 
                            currency = openapi_client.models.currency.currency(), 
                            id = '', 
                            name = '', 
                            price = openapi_client.models.price.price(), 
                            publisher_name = '', 
                            quantity = openapi_client.models.quantity.quantity(), 
                            solution_type = '', 
                            type = '', )
                        ], )
            )
        else:
            return MicrosoftPartnerReferralDetail(
        )
        """

    def testMicrosoftPartnerReferralDetail(self):
        """Test MicrosoftPartnerReferralDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
