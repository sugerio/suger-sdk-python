# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.azure_product_property import AzureProductProperty

class TestAzureProductProperty(unittest.TestCase):
    """AzureProductProperty unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureProductProperty:
        """Test AzureProductProperty
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureProductProperty`
        """
        model = AzureProductProperty()
        if include_optional:
            return AzureProductProperty(
                additional_categories = [
                    ''
                    ],
                app_version = '',
                applicable_products = [
                    ''
                    ],
                categories = [
                    ''
                    ],
                custom_amendments = [
                    ''
                    ],
                extended_properties = [
                    ''
                    ],
                global_amendment_terms = '',
                hide_keys = [
                    ''
                    ],
                id = '',
                industries = [
                    ''
                    ],
                leveled_categories = { },
                leveled_industries = { },
                marketing_only_change = True,
                product_tags = [
                    ''
                    ],
                resource_type = '',
                submission_version = '',
                terms_of_use = '',
                use_enterprise_contract = True
            )
        else:
            return AzureProductProperty(
        )
        """

    def testAzureProductProperty(self):
        """Test AzureProductProperty"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
