# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.azure_marketplace_price_and_availability_custom_meter_price import AzureMarketplacePriceAndAvailabilityCustomMeterPrice  # noqa: E501

class TestAzureMarketplacePriceAndAvailabilityCustomMeterPrice(unittest.TestCase):
    """AzureMarketplacePriceAndAvailabilityCustomMeterPrice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureMarketplacePriceAndAvailabilityCustomMeterPrice:
        """Test AzureMarketplacePriceAndAvailabilityCustomMeterPrice
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureMarketplacePriceAndAvailabilityCustomMeterPrice`
        """
        model = AzureMarketplacePriceAndAvailabilityCustomMeterPrice()  # noqa: E501
        if include_optional:
            return AzureMarketplacePriceAndAvailabilityCustomMeterPrice(
                meters = {
                    'key' : openapi_client.models.azure_marketplace_price_and_availability_custom_meter_price_meter_item.AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeterItem(
                        billing_term = openapi_client.models.azure_marketplace_term.AzureMarketplaceTerm(
                            type = 'day', 
                            value = 1.337, ), 
                        included_quantities = [
                            openapi_client.models.azure_marketplace_price_and_availability_custom_meter_price_included_quantity_item.AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem(
                                is_infinite = True, 
                                quantity = 1.337, )
                            ], 
                        payment_option = openapi_client.models.azure_marketplace_term.AzureMarketplaceTerm(
                            type = 'day', 
                            value = 1.337, ), 
                        price_per_payment_in_usd = 1.337, 
                        prices = [
                            openapi_client.models.azure_marketplace_price_and_availability_custom_meter_price_meter_item_price_item.AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeterItemPriceItem(
                                price_per_payment_in_usd = 1.337, )
                            ], )
                    },
                price_input_option = 'perMarket'
            )
        else:
            return AzureMarketplacePriceAndAvailabilityCustomMeterPrice(
        )
        """

    def testAzureMarketplacePriceAndAvailabilityCustomMeterPrice(self):
        """Test AzureMarketplacePriceAndAvailabilityCustomMeterPrice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
