# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.alibaba_marketplace_product import AlibabaMarketplaceProduct

class TestAlibabaMarketplaceProduct(unittest.TestCase):
    """AlibabaMarketplaceProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlibabaMarketplaceProduct:
        """Test AlibabaMarketplaceProduct
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlibabaMarketplaceProduct`
        """
        model = AlibabaMarketplaceProduct()
        if include_optional:
            return AlibabaMarketplaceProduct(
                audit_fail_msg = '',
                audit_status = '',
                audit_time = 56,
                code = '',
                description = '',
                front_category_id = 56,
                gmt_created = 56,
                gmt_modified = 56,
                name = '',
                pic_url = '',
                product_extras = {"ProductExtra":[{"Order":5,"Type":"Type","Label":"Label","Values":"{}","Key":"Key"},{"Order":5,"Type":"Type","Label":"Label","Values":"{}","Key":"Key"}]},
                product_skus = {"ProductSku":[{"Constraints":"Constraints","ChargeType":"ChargeType","Modules":{"Module":[{"Id":"Id","Properties":{"Property":[{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"},{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"}]},"Code":"Code","Name":"Name"},{"Id":"Id","Properties":{"Property":[{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"},{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"}]},"Code":"Code","Name":"Name"}]},"OrderPeriods":{"OrderPeriod":[{"PeriodType":"PeriodType","Name":"Name"},{"PeriodType":"PeriodType","Name":"Name"}]},"Hidden":true,"Code":"Code","Name":"Name"},{"Constraints":"Constraints","ChargeType":"ChargeType","Modules":{"Module":[{"Id":"Id","Properties":{"Property":[{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"},{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"}]},"Code":"Code","Name":"Name"},{"Id":"Id","Properties":{"Property":[{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"},{"PropertyValues":{"PropertyValue":[{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"},{"Type":"Type","Min":"Min","Max":"Max","DisplayName":"DisplayName","Value":"Value","Step":"Step","Remark":"Remark"}]},"showType":"showType","DisplayUnit":"DisplayUnit","Key":"Key","Name":"Name"}]},"Code":"Code","Name":"Name"}]},"OrderPeriods":{"OrderPeriod":[{"PeriodType":"PeriodType","Name":"Name"},{"PeriodType":"PeriodType","Name":"Name"}]},"Hidden":true,"Code":"Code","Name":"Name"}]},
                request_id = '',
                score = 1.337,
                shop_info = {"WangWangs":{"WangWang":[{"UserName":"UserName","Remark":"Remark"},{"UserName":"UserName","Remark":"Remark"}]},"Telephones":{"Telephone":["Telephone","Telephone"]},"Emails":"Emails","Id":7,"Name":"Name"},
                short_description = '',
                status = '',
                supplier_pk = 56,
                type = '',
                use_count = 56
            )
        else:
            return AlibabaMarketplaceProduct(
        )
        """

    def testAlibabaMarketplaceProduct(self):
        """Test AlibabaMarketplaceProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
