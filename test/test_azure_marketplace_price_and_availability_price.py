# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.azure_marketplace_price_and_availability_price import (
    AzureMarketplacePriceAndAvailabilityPrice,
)  # noqa: E501


class TestAzureMarketplacePriceAndAvailabilityPrice(unittest.TestCase):
    """AzureMarketplacePriceAndAvailabilityPrice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> AzureMarketplacePriceAndAvailabilityPrice:
        """Test AzureMarketplacePriceAndAvailabilityPrice
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `AzureMarketplacePriceAndAvailabilityPrice`
        """
        model = AzureMarketplacePriceAndAvailabilityPrice()  # noqa: E501
        if include_optional:
            return AzureMarketplacePriceAndAvailabilityPrice(
                core_pricing = openapi_client.models.azure_marketplace_price_and_availability_core_price.AzureMarketplacePriceAndAvailabilityCorePrice(
                    price = 1.337, 
                    price_input_option = 'free', 
                    price_per_core = 1.337, 
                    price_per_core_size = openapi_client.models.price_per_core_size.pricePerCoreSize(), 
                    prices = [
                        openapi_client.models.azure_marketplace_price.AzureMarketplacePrice(
                            currency = '', 
                            markets = [
                                ''
                                ], 
                            price = 1.337, )
                        ], ),
                license_model = ''
            )
        else:
            return AzureMarketplacePriceAndAvailabilityPrice(
        )
        """

    def testAzureMarketplacePriceAndAvailabilityPrice(self):
        """Test AzureMarketplacePriceAndAvailabilityPrice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
