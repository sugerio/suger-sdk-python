# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.snowflake_marketplace_offer import SnowflakeMarketplaceOffer

class TestSnowflakeMarketplaceOffer(unittest.TestCase):
    """SnowflakeMarketplaceOffer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SnowflakeMarketplaceOffer:
        """Test SnowflakeMarketplaceOffer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SnowflakeMarketplaceOffer`
        """
        model = SnowflakeMarketplaceOffer()
        if include_optional:
            return SnowflakeMarketplaceOffer(
                access_end_time = '',
                access_start_date_preference = '',
                access_start_time = '',
                additional_information = '',
                comment = '',
                contract_duration_months = 56,
                contract_type = '',
                contract_value = '',
                discount = 1.337,
                display_name = '',
                expiration_time = '',
                invoice_start_date_preference = '',
                invoice_start_time = '',
                is_default = True,
                name = '',
                payment_terms = suger_sdk_python.models.snowflake_marketplace_offer_payment_terms.SnowflakeMarketplaceOfferPaymentTerms(
                    installment_schedule = suger_sdk_python.models.installment_schedule.installment_schedule(), 
                    payment_type = 'INVOICE', ),
                pricing_plan_name = '',
                state = '',
                state_updated_on = '',
                target_consumer = '',
                terms_of_service = suger_sdk_python.models.snowflake_marketplace_offer_terms_of_service.SnowflakeMarketplaceOfferTermsOfService(
                    custom_link = '', 
                    type = '', ),
                updated_on = ''
            )
        else:
            return SnowflakeMarketplaceOffer(
        )
        """

    def testSnowflakeMarketplaceOffer(self):
        """Test SnowflakeMarketplaceOffer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
