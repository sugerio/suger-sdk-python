# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.snowflake_marketplace_product import SnowflakeMarketplaceProduct

class TestSnowflakeMarketplaceProduct(unittest.TestCase):
    """SnowflakeMarketplaceProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SnowflakeMarketplaceProduct:
        """Test SnowflakeMarketplaceProduct
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SnowflakeMarketplaceProduct`
        """
        model = SnowflakeMarketplaceProduct()
        if include_optional:
            return SnowflakeMarketplaceProduct(
                comment = {"valid":true,"string":"string"},
                created_on = {"valid":true,"time":"time"},
                detailed_target_accounts = {"valid":true,"string":"string"},
                distribution = {"valid":true,"string":"string"},
                global_name = {"valid":true,"string":"string"},
                is_application = {"valid":true,"bool":true},
                is_by_request = {"valid":true,"bool":true},
                is_limited_trial = {"valid":true,"bool":true},
                is_monetized = {"valid":true,"bool":true},
                is_mountless_queryable = {"valid":true,"bool":true},
                is_targeted = {"valid":true,"bool":true},
                owner = {"valid":true,"string":"string"},
                owner_role_type = {"valid":true,"string":"string"},
                profile = {"valid":true,"string":"string"},
                published_on = {"valid":true,"time":"time"},
                regions = {"valid":true,"string":"string"},
                rejected_on = {"valid":true,"time":"time"},
                review_state = {"valid":true,"string":"string"},
                state = {"valid":true,"string":"string"},
                subtitle = {"valid":true,"string":"string"},
                target_accounts = {"valid":true,"string":"string"},
                title = {"valid":true,"string":"string"},
                uniform_listing_locator = {"valid":true,"string":"string"},
                updated_on = {"valid":true,"time":"time"},
                name = {"valid":true,"string":"string"},
                organization_profile_name = {"valid":true,"string":"string"}
            )
        else:
            return SnowflakeMarketplaceProduct(
        )
        """

    def testSnowflakeMarketplaceProduct(self):
        """Test SnowflakeMarketplaceProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
