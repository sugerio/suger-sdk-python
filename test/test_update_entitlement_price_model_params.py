# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from suger_sdk_python.models.update_entitlement_price_model_params import UpdateEntitlementPriceModelParams

class TestUpdateEntitlementPriceModelParams(unittest.TestCase):
    """UpdateEntitlementPriceModelParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateEntitlementPriceModelParams:
        """Test UpdateEntitlementPriceModelParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateEntitlementPriceModelParams`
        """
        model = UpdateEntitlementPriceModelParams()
        if include_optional:
            return UpdateEntitlementPriceModelParams(
                apply_time = '',
                billable_dimensions = [
                    {"priceModelTiered":"{}","priceModelTieredPercentage":"{}","priceModelMatrix":"{}","minimumCommit":5.962133916683182,"length":1,"priceModelBulk":"{}","description":"description","discount":"{}","minimumCommitScope":"{}","minimumCommitProrata":true,"billableMetricId":"billableMetricId","priceModelPercentage":"{}","name":"name","priceModelBasic":"{}","category":"{}","priceModelVolume":"{}","timeUnit":"{}"}
                    ],
                commits = [
                    {"types":["types","types"],"quantity":4,"length":9,"description":"description","type":"{}","maximumUsers":361608,"rate":7.386281948385884,"isUserCreated":true,"minimumUsers":202713,"name":"name","term":"term","category":"category","termEndTime":"termEndTime","key":"key","timeUnit":"{}"}
                    ]
            )
        else:
            return UpdateEntitlementPriceModelParams(
        )
        """

    def testUpdateEntitlementPriceModelParams(self):
        """Test UpdateEntitlementPriceModelParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
