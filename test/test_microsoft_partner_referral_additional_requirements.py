# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest


from openapi_client.models.microsoft_partner_referral_additional_requirements import (
    MicrosoftPartnerReferralAdditionalRequirements,
)  # noqa: E501


class TestMicrosoftPartnerReferralAdditionalRequirements(unittest.TestCase):
    """MicrosoftPartnerReferralAdditionalRequirements unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> MicrosoftPartnerReferralAdditionalRequirements:
        """Test MicrosoftPartnerReferralAdditionalRequirements
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `MicrosoftPartnerReferralAdditionalRequirements`
        """
        model = MicrosoftPartnerReferralAdditionalRequirements()  # noqa: E501
        if include_optional:
            return MicrosoftPartnerReferralAdditionalRequirements(
                attributes = [
                    openapi_client.models.microsoft_partner_referral_requirement_attribute.MicrosoftPartnerReferralRequirementAttribute(
                        id = '', 
                        type = '', )
                    ],
                iot = openapi_client.models.microsoft_partner_referral_iot.MicrosoftPartnerReferralIot(
                    attach_services = True, 
                    azure_certified_device = True, 
                    customer_license_agreement_number = openapi_client.models.customer_license_agreement_number.customerLicenseAgreementNumber(), 
                    device_category = openapi_client.models.device_category.deviceCategory(), 
                    silicon_type = openapi_client.models.silicon_type.siliconType(), )
            )
        else:
            return MicrosoftPartnerReferralAdditionalRequirements(
        )
        """

    def testMicrosoftPartnerReferralAdditionalRequirements(self):
        """Test MicrosoftPartnerReferralAdditionalRequirements"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
