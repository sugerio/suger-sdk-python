# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.azure_marketplace_price_and_availability_private_offer_price import AzureMarketplacePriceAndAvailabilityPrivateOfferPrice  # noqa: E501

class TestAzureMarketplacePriceAndAvailabilityPrivateOfferPrice(unittest.TestCase):
    """AzureMarketplacePriceAndAvailabilityPrivateOfferPrice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureMarketplacePriceAndAvailabilityPrivateOfferPrice:
        """Test AzureMarketplacePriceAndAvailabilityPrivateOfferPrice
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureMarketplacePriceAndAvailabilityPrivateOfferPrice`
        """
        model = AzureMarketplacePriceAndAvailabilityPrivateOfferPrice()  # noqa: E501
        if include_optional:
            return AzureMarketplacePriceAndAvailabilityPrivateOfferPrice(
                custom_meters = openapi_client.models.azure_marketplace_price_and_availability_private_offer_custom_meters.AzureMarketplacePriceAndAvailabilityPrivateOfferCustomMeters(
                    meters = openapi_client.models.meters.meters(), 
                    price_input_option = 'perMarket', ),
                recurrent_price = openapi_client.models.azure_marketplace_price_and_availability_recurrent_price.AzureMarketplacePriceAndAvailabilityRecurrentPrice(
                    price_input_option = 'perMarket', 
                    prices = [
                        openapi_client.models.azure_marketplace_price_and_availability_recurrent_price_item.AzureMarketplacePriceAndAvailabilityRecurrentPriceItem(
                            billing_term = openapi_client.models.azure_marketplace_term.AzureMarketplaceTerm(
                                type = 'day', 
                                value = 1.337, ), 
                            payment_option = openapi_client.models.azure_marketplace_term.AzureMarketplaceTerm(
                                type = 'day', 
                                value = 1.337, ), 
                            price_per_payment_in_usd = 1.337, )
                        ], 
                    recurrent_price_mode = 'flatRate', 
                    user_limits = openapi_client.models.azure_marketplace_price_and_availability_recurrent_price_user_limit.AzureMarketplacePriceAndAvailabilityRecurrentPriceUserLimit(
                        max = 1.337, 
                        min = 1.337, ), )
            )
        else:
            return AzureMarketplacePriceAndAvailabilityPrivateOfferPrice(
        )
        """

    def testAzureMarketplacePriceAndAvailabilityPrivateOfferPrice(self):
        """Test AzureMarketplacePriceAndAvailabilityPrivateOfferPrice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
