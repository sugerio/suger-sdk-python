# coding: utf-8

"""
    Suger API

    CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

    The version of the OpenAPI document: 1.0
    Contact: support@suger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from pydantic import BaseModel, Field, StrictStr


class GetApiClientAccessTokenParams(BaseModel):
    """
    GetApiClientAccessTokenParams
    """

    id: StrictStr = Field(..., description="The ID of the API Client.")
    organization_id: StrictStr = Field(..., alias="organizationID")
    secret: StrictStr = Field(..., description="The secret of the API Client.")
    __properties = ["id", "organizationID", "secret"]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> GetApiClientAccessTokenParams:
        """Create an instance of GetApiClientAccessTokenParams from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> GetApiClientAccessTokenParams:
        """Create an instance of GetApiClientAccessTokenParams from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return GetApiClientAccessTokenParams.parse_obj(obj)

        _obj = GetApiClientAccessTokenParams.parse_obj(
            {
                "id": obj.get("id"),
                "organization_id": obj.get("organizationID"),
                "secret": obj.get("secret"),
            }
        )
        return _obj
